import os
import json
import requests
import time
from typing import Dict, List, Any, Optional
from dataclasses import dataclass
import re
from enum import Enum

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
class RequestType(Enum):
    CREATE_NEW_PROJECT = "create_new_project"
    MODIFY_EXISTING = "modify_existing"
    CHAT_QUESTION = "chat_question"

class ProjectType(Enum):
    WEB_APP = "web_app"
    MOBILE_APP = "mobile_app"
    AI_MENTOR = "ai_mentor"
    GAME = "game"
    DASHBOARD = "dashboard"
    OTHER = "other"

@dataclass
class RequestAnalysis:
    request_type: RequestType
    project_type: Optional[ProjectType]
    features: List[str]
    confidence: float
    raw_message: str

@dataclass
class GeneratedFile:
    name: str
    content: str
    type: str  # 'html', 'css', 'js', 'json', 'md'

@dataclass
class ProjectResult:
    success: bool
    message: str
    files: List[GeneratedFile]
    structure: List[str]
    instructions: str
    project_type: str
    name: str = ""
    description: str = ""
    technologies: List[str] = None
    features: List[str] = None

    def __post_init__(self):
        if self.technologies is None:
            self.technologies = []
        if self.features is None:
            self.features = []

class SmartAIGenerator:
    """–£–º–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–¥–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö AI API"""
    
    def __init__(self):
        # –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º Groq API –¥–ª—è –º–æ—â–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
        self.groq_api_key = os.getenv('GROQ_API_KEY')
        self.groq_enabled = bool(self.groq_api_key)

        # –õ–∏–º–∏—Ç—ã Groq: 6000 –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω—É—Ç—É, 14400 –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å
        self.groq_rate_limit = {
            'requests_per_minute': 6000,
            'requests_per_day': 14400,
            'max_tokens_per_request': 32768,
            'current_requests': 0,
            'last_reset': time.time()
        }

        # üöÄ –†–ï–í–û–õ–Æ–¶–ò–Ø: –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º WebResearchEngine!
        try:
            from web_research_engine import WebResearchEngine
            self.research_engine = WebResearchEngine()
            self.research_enabled = True
            print("üîç WebResearchEngine –ø–æ–¥–∫–ª—é—á–µ–Ω!")
        except Exception as e:
            self.research_engine = None
            self.research_enabled = False
            print(f"‚ö†Ô∏è WebResearchEngine –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

        # üé® –ü–†–ï–ú–ò–£–ú –ì–†–ê–§–ò–ö–ê: –õ—É—á—à–∏–µ 3D/2D –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –º–∏—Ä–∞!
        try:
            from premium_graphics_libraries import PremiumGraphicsLibraries
            self.graphics_engine = PremiumGraphicsLibraries()
            self.graphics_enabled = True
            print("üé® Premium Graphics Engine –ø–æ–¥–∫–ª—é—á–µ–Ω!")
        except Exception as e:
            self.graphics_engine = None
            self.graphics_enabled = False
            print(f"‚ö†Ô∏è Graphics Engine –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

        print(f"üöÄ SmartAI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: Groq={'‚úÖ' if self.groq_enabled else '‚ùå'}, Research={'‚úÖ' if self.research_enabled else '‚ùå'}, Graphics={'‚úÖ' if self.graphics_enabled else '‚ùå'}")

        # –ú–æ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á (–æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–µ—Ä—Å–∏–π)
        self.models = {
            'architecture': 'llama-3.1-8b-instant',      # –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
            'code_generation': 'llama-3.1-8b-instant',    # –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞
            'optimization': 'llama-3.1-8b-instant',      # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥
            'analysis': 'llama-3.1-8b-instant'            # –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
        }

    def _check_groq_rate_limit(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Groq API"""
        current_time = time.time()

        # –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        if current_time - self.groq_rate_limit['last_reset'] > 60:
            self.groq_rate_limit['current_requests'] = 0
            self.groq_rate_limit['last_reset'] = current_time

        return self.groq_rate_limit['current_requests'] < self.groq_rate_limit['requests_per_minute']

    def _call_groq_api(self, prompt: str, model: str = 'llama-3.1-8b-instant', max_retries: int = 3) -> str:
        """–í—ã–∑—ã–≤–∞–µ—Ç Groq API —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ª–∏–º–∏—Ç–∞–º–∏"""
        if not self.groq_enabled:
            raise Exception("Groq API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

        if not self._check_groq_rate_limit():
            wait_time = 60 - (time.time() - self.groq_rate_limit['last_reset'])
            print(f"‚è≥ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç Groq API. –û–∂–∏–¥–∞–Ω–∏–µ {wait_time:.1f} —Å–µ–∫—É–Ω–¥...")
            time.sleep(wait_time)
            return self._call_groq_api(prompt, model, max_retries)

        headers = {
            'Authorization': f'Bearer {self.groq_api_key}',
            'Content-Type': 'application/json'
        }

        data = {
            'model': model,
            'messages': [
                {
                    'role': 'user',
                    'content': prompt
                }
            ],
            'max_tokens': min(len(prompt) * 2, 32768),
            'temperature': 0.7
        }

        for attempt in range(max_retries):
            try:
                print(f"ü§ñ –ó–∞–ø—Ä–æ—Å –∫ Groq API ({model})... –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_retries}")

                response = requests.post(
                    'https://api.groq.com/openai/v1/chat/completions',
                    headers=headers,
                    json=data,
                    timeout=120
                )

                if response.status_code == 200:
                    self.groq_rate_limit['current_requests'] += 1
                    result = response.json()
                    content = result['choices'][0]['message']['content']
                    print(f"‚úÖ Groq –æ—Ç–≤–µ—Ç–∏–ª: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    return content
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ Groq API: {response.status_code} - {response.text}")
                    if attempt < max_retries - 1:
                        time.sleep(2 ** attempt)  # Exponential backoff

            except Exception as e:
                print(f"‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Groq: {e}")
                if attempt < max_retries - 1:
                    time.sleep(2 ** attempt)

        raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç Groq API –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫")

    async def analyze_project_with_research(self, description: str, progress_callback=None) -> Dict[str, Any]:
        """üöÄ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ–∏—Å–∫–æ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ!"""

        if progress_callback:
            progress_callback("üîç –ò—â—É –ø–æ—Ö–æ–∂–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è...", 15)

        # –≠—Ç–∞–ø 1: –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ
        research_data = None
        if self.research_enabled:
            try:
                # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                research_query = f"best {description} examples successful projects enterprise level"

                if progress_callback:
                    progress_callback("üåê –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø—Ä–æ–µ–∫—Ç—ã –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è...", 25)

                # –ò—Å—Å–ª–µ–¥—É–µ–º –ø—Ä–æ–µ–∫—Ç—ã —á–µ—Ä–µ–∑ WebResearchEngine
                research_data = await self.research_engine.research_billionaire_interviews(
                    research_query, count=15
                )

                if progress_callback:
                    progress_callback(f"üìä –ù–∞–π–¥–µ–Ω–æ {research_data.total_sources} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞", 35)

            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–µ–±-–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: {e}")

        # –≠—Ç–∞–ø 2: AI –∞–Ω–∞–ª–∏–∑ —Å —É—á–µ—Ç–æ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        return await self._analyze_with_research_data(description, research_data, progress_callback)

    async def _analyze_with_research_data(self, description: str, research_data, progress_callback) -> Dict[str, Any]:
        """üß† –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ —Å —É—á–µ—Ç–æ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""

        if progress_callback:
            progress_callback("üß† AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏...", 45)

        # –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
        base_analysis = self.analyze_project_requirements(description)

        if not self.groq_enabled:
            return base_analysis

        # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        enhanced_prompt = f"""
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ú–ò–†–û–í–û–ì–û –£–†–û–í–ù–Ø:

–û–ü–ò–°–ê–ù–ò–ï –ü–†–û–ï–ö–¢–ê: {description}

{"–ò–°–°–õ–ï–î–û–í–ê–ù–ù–´–ï –õ–£–ß–®–ò–ï –ü–†–ê–ö–¢–ò–ö–ò:" if research_data else ""}
{research_data.analysis if research_data else "–ò—Å–ø–æ–ª—å–∑—É–π –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –æ –ª—É—á—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö"}

{"–ù–ê–ô–î–ï–ù–ù–´–ï –ò–°–¢–û–ß–ù–ò–ö–ò:" if research_data else ""}
{json.dumps([{
    'title': src.get('title', '')[:100],
    'insights': src.get('snippet', '')[:200]
} for src in (research_data.sources[:5] if research_data else [])], ensure_ascii=False)}

–ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞–π –ø—Ä–æ–µ–∫—Ç —É—Ä–æ–≤–Ω—è Fortune 500 –∫–æ–º–ø–∞–Ω–∏–π!

–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{{
    "project_type": "—Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞",
    "complexity": "enterprise",
    "estimated_development_time": "–≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö",
    "inspiration_sources": ["–∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è"],
    "world_class_features": ["—Ñ—É–Ω–∫—Ü–∏–∏ –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è"],
    "technologies": ["—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"],
    "architecture": {{
        "frontend": "–æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è",
        "backend": "enterprise backend –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞",
        "database": "production-ready –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö",
        "apis": ["–≤–Ω–µ—à–Ω–∏–µ API –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è"],
        "microservices": ["–º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã"],
        "scalability": "—Å—Ç—Ä–∞—Ç–µ–≥–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è"
    }},
    "file_structure": [
        {{
            "path": "–ø—É—Ç—å/—Ñ–∞–π–ª–∞",
            "type": "html|css|js|json|md|py|sql|ts|scss|yaml",
            "description": "–æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–π–ª–∞",
            "priority": 1-10,
            "enterprise_features": ["enterprise –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"]
        }}
    ],
    "features": ["—Å–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π enterprise —É—Ä–æ–≤–Ω—è"],
    "libraries": ["—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏"],
    "security_considerations": ["–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å enterprise —É—Ä–æ–≤–Ω—è"],
    "performance_optimizations": ["–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ production —É—Ä–æ–≤–Ω—è"],
    "deployment_strategy": "enterprise deployment —Å—Ç—Ä–∞—Ç–µ–≥–∏—è",
    "monitoring_and_analytics": ["—Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"],
    "business_intelligence": ["–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ BI"],
    "competitive_advantages": ["–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞"]
}}
"""

        try:
            response = self._call_groq_api(enhanced_prompt, self.models['architecture'])
            analysis = json.loads(response)

            # –û–±–æ–≥–∞—â–∞–µ–º –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
            if research_data:
                analysis['research_data'] = {
                    'sources_count': research_data.total_sources,
                    'confidence': research_data.confidence,
                    'key_insights': research_data.analysis[:500] if research_data.analysis else "",
                    'research_timestamp': research_data.timestamp.isoformat()
                }

            if progress_callback:
                progress_callback("‚ú® AI —Å–æ–∑–¥–∞–ª –ø–ª–∞–Ω –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è!", 55)

            print(f"üöÄ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω:")
            print(f"   –¢–∏–ø: {analysis.get('project_type', 'unknown')}")
            print(f"   –°–ª–æ–∂–Ω–æ—Å—Ç—å: {analysis.get('complexity', 'unknown')}")
            print(f"   –§–∞–π–ª–æ–≤: {len(analysis.get('file_structure', []))}")
            if research_data:
                print(f"   –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {research_data.total_sources}")

            return analysis

        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ AI –∞–Ω–∞–ª–∏–∑–∞: {e}")
            return base_analysis

    def analyze_project_with_ai(self, description: str) -> Dict[str, Any]:
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ (fallback)"""
        if not self.groq_enabled:
            return self.analyze_project_requirements(description)

        analysis_prompt = f"""
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:

–û–ü–ò–°–ê–ù–ò–ï –ü–†–û–ï–ö–¢–ê: {description}

–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{{
    "project_type": "—Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞",
    "complexity": "simple|medium|complex|enterprise",
    "estimated_development_time": "–≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö",
    "technologies": ["—Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π"],
    "architecture": {{
        "frontend": "–æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞",
        "backend": "–æ–ø–∏—Å–∞–Ω–∏–µ –±–µ–∫–µ–Ω–¥–∞",
        "database": "—Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        "apis": ["–≤–Ω–µ—à–Ω–∏–µ API"]
    }},
    "file_structure": [
        {{
            "path": "–ø—É—Ç—å/—Ñ–∞–π–ª–∞",
            "type": "html|css|js|json|md|py|sql",
            "description": "–æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–π–ª–∞",
            "priority": 1-10
        }}
    ],
    "features": ["—Å–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π"],
    "libraries": ["–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"],
    "security_considerations": ["–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"],
    "performance_optimizations": ["–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"],
    "deployment_strategy": "—Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–µ–ø–ª–æ—è"
}}
"""

        try:
            response = self._call_groq_api(analysis_prompt, self.models['architecture'])
            # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
            import json
            analysis = json.loads(response)

            print(f"üß† AI –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω:")
            print(f"   –¢–∏–ø: {analysis.get('project_type', 'unknown')}")
            print(f"   –°–ª–æ–∂–Ω–æ—Å—Ç—å: {analysis.get('complexity', 'unknown')}")
            print(f"   –§–∞–π–ª–æ–≤: {len(analysis.get('file_structure', []))}")

            return analysis

        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞: {e}")
            print("üîÑ –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –∫ –±–∞–∑–æ–≤–æ–º—É –∞–Ω–∞–ª–∏–∑—É...")
            return self.analyze_project_requirements(description)

    def analyze_project_requirements(self, description: str) -> Dict[str, Any]:
        """–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ (fallback)"""
        
        project_types = {
            'landing': ['–ª–µ–Ω–¥–∏–Ω–≥', 'landing', '—Å–∞–π—Ç-–≤–∏–∑–∏—Ç–∫–∞', '–æ–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–∏–∫', '–ø—Ä–æ–º–æ'],
            'blog': ['–±–ª–æ–≥', 'blog', '–Ω–æ–≤–æ—Å—Ç–∏', '—Å—Ç–∞—Ç—å–∏', '–∂—É—Ä–Ω–∞–ª', 'cms'],
            'ecommerce': ['–º–∞–≥–∞–∑–∏–Ω', 'shop', '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω', 'ecommerce', '—Ç–æ—Ä–≥–æ–≤–ª—è', '–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å'],
            'portfolio': ['–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ', 'portfolio', '—Ä–µ–∑—é–º–µ', 'cv', '–≥–∞–ª–µ—Ä–µ—è —Ä–∞–±–æ—Ç', '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ'],
            'dashboard': ['–∞–¥–º–∏–Ω–∫–∞', 'dashboard', '–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', '–∞–Ω–∞–ª–∏—Ç–∏–∫–∞', 'crm', '—Å–∏—Å—Ç–µ–º–∞'],
            'game': ['–∏–≥—Ä–∞', 'game', '—Ç–µ—Ç—Ä–∏—Å', '–∑–º–µ–π–∫–∞', '–ø–∞–∑–ª', '–∞—Ä–∫–∞–¥–∞', '–∫–≤–µ—Å—Ç', '—à—É—Ç–µ—Ä'],
            'calculator': ['–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', 'calculator', '—Å—á—ë—Ç—á–∏–∫', '–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä', '–∫—É—Ä—Å—ã –≤–∞–ª—é—Ç'],
            'timer': ['—Ç–∞–π–º–µ—Ä', 'timer', '–±—É–¥–∏–ª—å–Ω–∏–∫', '—Å–µ–∫—É–Ω–¥–æ–º–µ—Ä', '–ø–æ–º–æ–¥–æ—Ä–æ', '—Ç—Ä–µ–∫–µ—Ä'],
            'todo': ['todo', '—Å–ø–∏—Å–æ–∫ –¥–µ–ª', '–∑–∞–¥–∞—á–∏', '–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫', '–æ—Ä–≥–∞–Ω–∞–π–∑–µ—Ä', '–∫–∞–Ω–±–∞–Ω'],
            'chat': ['—á–∞—Ç', 'chat', '–º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä', '–æ–±—â–µ–Ω–∏–µ', '—Ñ–æ—Ä—É–º', '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'],
            'weather': ['–ø–æ–≥–æ–¥–∞', 'weather', '–ø—Ä–æ–≥–Ω–æ–∑', '–º–µ—Ç–µ–æ', '–∫–ª–∏–º–∞—Ç'],
            'music': ['–º—É–∑—ã–∫–∞', 'music', '–ø–ª–µ–µ—Ä', '–∞—É–¥–∏–æ', '–ø–æ–¥–∫–∞—Å—Ç—ã', '—Ä–∞–¥–∏–æ'],
            'photo': ['—Ñ–æ—Ç–æ', 'photo', '–≥–∞–ª–µ—Ä–µ—è', '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'instagram', '—Ñ–æ—Ç–æ—Å—Ç–æ–∫'],
            'social': ['—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å', 'social', '–ª–∞–π–∫–∏', '–ø–æ—Å—Ç—ã', '–ø—Ä–æ—Ñ–∏–ª—å', '–¥—Ä—É–∑—å—è', '–ª–∞–π–∫–∏ –∏ –ø–æ—Å—Ç—ã'],
            'education': ['–æ–±—É—á–µ–Ω–∏–µ', '–∫—É—Ä—Å—ã', 'education', '—à–∫–æ–ª–∞', '—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', '—Ç–µ—Å—Ç—ã'],
            'fitness': ['—Ñ–∏—Ç–Ω–µ—Å', '—Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', '—Å–ø–æ—Ä—Ç', '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', '–∑–¥–æ—Ä–æ–≤—å–µ', '–¥–∏–µ—Ç–∞', '–∫–∞–ª–æ—Ä–∏–∏', '—Ç—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª'],
            'finance': ['—Ñ–∏–Ω–∞–Ω—Å—ã', '–±—é–¥–∂–µ—Ç', '–¥–µ–Ω—å–≥–∏', '–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', '–±–∞–Ω–∫', '–∫–æ—à–µ–ª–µ–∫'],
            'travel': ['–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–æ—Ç–µ–ª–∏', '–±–∏–ª–µ—Ç—ã', '—Ç—É—Ä–∏–∑–º', '–∫–∞—Ä—Ç—ã', '–≥–∏–¥'],
            'food': ['–µ–¥–∞', '—Ä–µ—Ü–µ–ø—Ç—ã', '—Ä–µ—Å—Ç–æ—Ä–∞–Ω', '–¥–æ—Å—Ç–∞–≤–∫–∞', '–∫–∞—Ñ–µ', '–∫—É–ª–∏–Ω–∞—Ä–∏—è'],
            'booking': ['–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', '–∑–∞–ø–∏—Å—å', '–∫–∞–ª–µ–Ω–¥–∞—Ä—å', '–≤—Å—Ç—Ä–µ—á–∏', '—Å–∞–ª–æ–Ω', '–≤—Ä–∞—á'],
            'quiz': ['–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞', 'quiz', '—Ç–µ—Å—Ç', '–æ–ø—Ä–æ—Å', '–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', '–∫–≤–∏–∑'],
            'streaming': ['–≤–∏–¥–µ–æ', '—Å—Ç—Ä–∏–º–∏–Ω–≥', 'youtube', '—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏', '—Ñ–∏–ª—å–º—ã'],
            'crypto': ['–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', '–±–∏—Ç–∫–æ–∏–Ω', 'blockchain', '—Ç—Ä–µ–π–¥–∏–Ω–≥', '–º–∞–π–Ω–∏–Ω–≥'],
            'ai': ['–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç', 'ai', '–Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏', '—á–∞—Ç–±–æ—Ç', 'ml'],
            'dating': ['–∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞', 'dating', '—Å–≤–∏–¥–∞–Ω–∏—è', '–ø–∞—Ä—ã', '–ª—é–±–æ–≤—å'],
            'news': ['–Ω–æ–≤–æ—Å—Ç–∏', '–°–ú–ò', '–∂—É—Ä–Ω–∞–ª–∏—Å—Ç–∏–∫–∞', '—Ä–µ–ø–æ—Ä—Ç–∞–∂–∏', '—Å–æ–±—ã—Ç–∏—è'],
            'real_estate': ['–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', '–∫–≤–∞—Ä—Ç–∏—Ä—ã', '–∞—Ä–µ–Ω–¥–∞', '–ø—Ä–æ–¥–∞–∂–∞', '—Ä–∏–µ–ª—Ç–æ—Ä'],
            'job': ['—Ä–∞–±–æ—Ç–∞', '–≤–∞–∫–∞–Ω—Å–∏–∏', '—Ä–µ–∑—é–º–µ', '–∫–∞—Ä—å–µ—Ä–∞', 'hh', '—Ä–µ–∫—Ä—É—Ç–∏–Ω–≥']
        }
        
        description_lower = description.lower()
        detected_type = 'webapp'
        confidence = 0
        
        # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –≤–µ—Å–æ–º
        type_scores = {}
        try:
            if isinstance(project_types, dict):
                for proj_type, keywords in project_types.items():
                    score = 0
                    for keyword in keywords:
                        if keyword in description_lower:
                            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª–∏–Ω–Ω—ã–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
                            weight = len(keyword.split()) * 2 + 1
                            score += weight
                    type_scores[proj_type] = score
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: project_types –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º: {type(project_types)}")
        except AttributeError as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ project_types.items(): {e}")
            print(f"‚ö†Ô∏è –¢–∏–ø project_types: {type(project_types)}")
        
        # –ù–∞—Ö–æ–¥–∏–º —Ç–∏–ø —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –≤–µ—Å–æ–º
        if type_scores:
            best_type = max(type_scores, key=type_scores.get)
            if type_scores[best_type] > 0:
                detected_type = best_type
                confidence = type_scores[best_type]
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        technologies = []
        if any(word in description_lower for word in ['react', 'vue', 'angular']):
            technologies.append('spa')
        if any(word in description_lower for word in ['bootstrap', 'tailwind']):
            technologies.append('framework')
        if any(word in description_lower for word in ['api', 'backend', '—Å–µ—Ä–≤–µ—Ä']):
            technologies.append('backend')
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å
        complexity = 'simple'
        if len(description.split()) > 50 or '—Å–ª–æ–∂–Ω' in description_lower or '–º–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π' in description_lower:
            complexity = 'complex'
        elif len(description.split()) > 20:
            complexity = 'medium'
            
        return {
            'project_type': detected_type,
            'confidence': confidence,
            'technologies': technologies,
            'complexity': complexity,
            'estimated_files': self._estimate_files(detected_type, complexity)
        }

    def _estimate_files(self, project_type: str, complexity: str) -> List[str]:
        """–û—Ü–µ–Ω–∏–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞"""
        base_files = ['index.html', 'styles.css', 'script.js']
        
        file_structures = {
            'game': ['index.html', 'game.css', 'game.js', 'assets/sounds.js'],
            'dashboard': ['index.html', 'dashboard.css', 'dashboard.js', 'data.js', 'charts.js'],
            'ecommerce': ['index.html', 'products.html', 'cart.html', 'checkout.html', 'styles.css', 'shop.js', 'cart.js'],
            'social': ['index.html', 'profile.html', 'feed.html', 'social.css', 'social.js', 'api.js'],
            'education': ['index.html', 'courses.html', 'quiz.html', 'education.css', 'learning.js', 'progress.js'],
            'fitness': ['index.html', 'workout.html', 'tracker.html', 'fitness.css', 'fitness.js', 'health.js'],
            'finance': ['index.html', 'budget.html', 'transactions.html', 'finance.css', 'money.js', 'charts.js'],
            'travel': ['index.html', 'destinations.html', 'booking.html', 'travel.css', 'maps.js', 'booking.js'],
            'food': ['index.html', 'menu.html', 'recipes.html', 'food.css', 'recipes.js', 'nutrition.js'],
            'booking': ['index.html', 'calendar.html', 'appointments.html', 'booking.css', 'calendar.js', 'booking.js'],
            'streaming': ['index.html', 'player.html', 'playlist.html', 'video.css', 'player.js', 'streaming.js'],
            'chat': ['index.html', 'chat.html', 'rooms.html', 'chat.css', 'chat.js', 'socket.js'],
            'music': ['index.html', 'player.html', 'playlist.html', 'music.css', 'audio.js', 'player.js'],
            'weather': ['index.html', 'forecast.html', 'maps.html', 'weather.css', 'weather.js', 'api.js'],
            'crypto': ['index.html', 'portfolio.html', 'trading.html', 'crypto.css', 'trading.js', 'charts.js'],
            'ai': ['index.html', 'chat.html', 'models.html', 'ai.css', 'ai.js', 'neural.js'],
            'dating': ['index.html', 'profiles.html', 'matches.html', 'dating.css', 'matching.js', 'chat.js'],
            'news': ['index.html', 'articles.html', 'categories.html', 'news.css', 'feed.js', 'reader.js'],
            'real_estate': ['index.html', 'listings.html', 'search.html', 'realty.css', 'search.js', 'maps.js'],
            'job': ['index.html', 'jobs.html', 'resume.html', 'career.css', 'jobs.js', 'matching.js']
        }
        
        if project_type in file_structures:
            return file_structures[project_type]
        elif complexity == 'complex':
            return base_files + ['components.js', 'utils.js', 'config.js', 'api.js']
        elif complexity == 'medium':
            return base_files + ['utils.js']
        else:
            return base_files

    def generate_with_claude(self, description: str, project_analysis: Dict[str, Any]) -> ProjectResult:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É—è Claude API"""
        
        if not self.claude_api_key:
            return self._fallback_generation(description, project_analysis)
            
        try:
            prompt = self._create_smart_prompt(description, project_analysis)
            
            headers = {
                'Content-Type': 'application/json',
                'x-api-key': self.claude_api_key,
                'anthropic-version': '2023-06-01'
            }
            
            payload = {
                'model': 'claude-3-5-sonnet-20241022',
                'max_tokens': 4000,
                'temperature': 0.7,
                'messages': [
                    {
                        'role': 'user', 
                        'content': prompt
                    }
                ]
            }
            
            response = requests.post(
                'https://api.anthropic.com/v1/messages',
                headers=headers,
                json=payload,
                timeout=30
            )
            
            if response.status_code == 200:
                result = response.json()
                content = result['content'][0]['text']
                return self._parse_ai_response(content, project_analysis)
            else:
                print(f"Claude API error: {response.status_code} - {response.text}")
                return self._fallback_generation(description, project_analysis)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Claude API: {e}")
            return self._fallback_generation(description, project_analysis)

    def generate_with_openai(self, description: str, project_analysis: Dict[str, Any]) -> ProjectResult:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É—è OpenAI API"""
        
        if not self.openai_api_key:
            return self._fallback_generation(description, project_analysis)
            
        try:
            prompt = self._create_smart_prompt(description, project_analysis)
            
            headers = {
                'Content-Type': 'application/json',
                'Authorization': f'Bearer {self.openai_api_key}'
            }
            
            payload = {
                'model': 'gpt-4',
                'messages': [
                    {
                        'role': 'system',
                        'content': 'You are an expert web developer who creates high-quality, modern web applications.'
                    },
                    {
                        'role': 'user',
                        'content': prompt
                    }
                ],
                'max_tokens': 4000,
                'temperature': 0.7
            }
            
            response = requests.post(
                'https://api.openai.com/v1/chat/completions',
                headers=headers,
                json=payload,
                timeout=30
            )
            
            if response.status_code == 200:
                result = response.json()
                content = result['choices'][0]['message']['content']
                return self._parse_ai_response(content, project_analysis)
            else:
                print(f"OpenAI API error: {response.status_code} - {response.text}")
                return self._fallback_generation(description, project_analysis)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI API: {e}")
            return self._fallback_generation(description, project_analysis)

    def _create_smart_prompt(self, description: str, analysis: Dict[str, Any]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç —É–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI —Å —É—á–µ—Ç–æ–º –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
        
        prompt = f"""–°–æ–∑–¥–∞–π –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é:

–û–ü–ò–°–ê–ù–ò–ï –ü–†–û–ï–ö–¢–ê: {description}

–¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
- –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞: {analysis['project_type']}
- –°–ª–æ–∂–Ω–æ—Å—Ç—å: {analysis['complexity']}  
- –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã: {', '.join(analysis['estimated_files'])}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ö–û–î–£:
1. –ò—Å–ø–æ–ª—å–∑—É–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ (HTML5, CSS3, ES6+)
2. –°–¥–µ–ª–∞–π –∫–æ–¥ —á–∏—Å—Ç—ã–º, —Ö–æ—Ä–æ—à–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º
3. –î–æ–±–∞–≤—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
4. –û–±–µ—Å–ø–µ—á—å –ø–æ–ª–Ω—É—é –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–¥ –≤—Å–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
5. –ò—Å–ø–æ–ª—å–∑—É–π —Å–µ–º–∞–Ω—Ç–∏—á–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
6. –î–æ–±–∞–≤—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é
7. –°–¥–µ–ª–∞–π –¥–∏–∑–∞–π–Ω —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º

–û–°–û–ë–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –¥–ª—è {analysis['project_type']}:
{self._get_project_specific_requirements(analysis['project_type'])}

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –∫–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

===FILE: filename.html===
[HTML –∫–æ–¥]
===END===

===FILE: filename.css===  
[CSS –∫–æ–¥]
===END===

===FILE: filename.js===
[JavaScript –∫–æ–¥]  
===END===

===INSTRUCTIONS===
[–ö—Ä–∞—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é]
===END===

–°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ, –∫—Ä–∞—Å–∏–≤–æ–µ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º!"""

        return prompt

    def _get_project_specific_requirements(self, project_type: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
        
        requirements = {
            'landing': """
            - –°–æ–∑–¥–∞–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π hero-—Ä–∞–∑–¥–µ–ª —Å –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é
            - –î–æ–±–∞–≤—å —Å–µ–∫—Ü–∏–∏: –û –Ω–∞—Å, –£—Å–ª—É–≥–∏, –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞, –ö–æ–Ω—Ç–∞–∫—Ç—ã  
            - –ò—Å–ø–æ–ª—å–∑—É–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ –º–∏–∫—Ä–æ–∞–Ω–∏–º–∞—Ü–∏–∏
            - –î–æ–±–∞–≤—å —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
            """,
            'game': """
            - –†–µ–∞–ª–∏–∑—É–π –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é –∏–≥—Ä–æ–≤—É—é –º–µ—Ö–∞–Ω–∏–∫—É
            - –î–æ–±–∞–≤—å —Å–∏—Å—Ç–µ–º—É –æ—á–∫–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π
            - –ò—Å–ø–æ–ª—å–∑—É–π Canvas –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
            - –î–æ–±–∞–≤—å –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
            - –°–¥–µ–ª–∞–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–º
            """,
            'dashboard': """
            - –°–æ–∑–¥–∞–π –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            - –î–æ–±–∞–≤—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –∏ —á–∞—Ä—Ç—ã
            - –ò—Å–ø–æ–ª—å–∑—É–π —Ç–∞–±–ª–∏—Ü—ã —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
            - –î–æ–±–∞–≤—å —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            - –°–¥–µ–ª–∞–π —Ç—ë–º–Ω—É—é —Ç–µ–º—É
            """,
            'ecommerce': """
            - –°–æ–∑–¥–∞–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
            - –î–æ–±–∞–≤—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ–∫—É–ø–æ–∫ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ localStorage
            - –†–µ–∞–ª–∏–∑—É–π –ø–æ–∏—Å–∫ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
            - –î–æ–±–∞–≤—å –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä–∞
            - –°–¥–µ–ª–∞–π –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é —Å–µ—Ç–∫—É —Ç–æ–≤–∞—Ä–æ–≤
            """,
            'portfolio': """
            - –°–æ–∑–¥–∞–π –≥–∞–ª–µ—Ä–µ—é —Ä–∞–±–æ—Ç —Å –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏
            - –î–æ–±–∞–≤—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            - –†–µ–∞–ª–∏–∑—É–π –ø–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏
            - –î–æ–±–∞–≤—å —Ñ–æ—Ä–º—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            - –°–¥–µ–ª–∞–π –ø–∞—Ä–∞–ª–ª–∞–∫—Å-—ç—Ñ—Ñ–µ–∫—Ç—ã
            """,
            'social': """
            - –°–æ–∑–¥–∞–π –ª–µ–Ω—Ç—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å –ø–æ—Å—Ç–∞–º–∏
            - –î–æ–±–∞–≤—å —Å–∏—Å—Ç–µ–º—É –ª–∞–π–∫–æ–≤ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            - –†–µ–∞–ª–∏–∑—É–π –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            - –î–æ–±–∞–≤—å –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã –¥—Ä—É–∑–µ–π
            - –°–¥–µ–ª–∞–π —á–∞—Ç –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
            """,
            'education': """
            - –°–æ–∑–¥–∞–π –∫–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
            - –î–æ–±–∞–≤—å —Å–∏—Å—Ç–µ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω
            - –†–µ–∞–ª–∏–∑—É–π —Ç—Ä–µ–∫–∏–Ω–≥ –æ–±—É—á–µ–Ω–∏—è
            - –î–æ–±–∞–≤—å –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä –¥–ª—è —É—Ä–æ–∫–æ–≤
            - –°–¥–µ–ª–∞–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
            """,
            'fitness': """
            - –°–æ–∑–¥–∞–π —Ç—Ä–µ–∫–µ—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
            - –î–æ–±–∞–≤—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–Ω—è—Ç–∏–π
            - –†–µ–∞–ª–∏–∑—É–π —Å—á—ë—Ç—á–∏–∫ –∫–∞–ª–æ—Ä–∏–π
            - –î–æ–±–∞–≤—å –≥—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            - –°–¥–µ–ª–∞–π —Ç–∞–π–º–µ—Ä—ã –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
            """,
            'finance': """
            - –°–æ–∑–¥–∞–π —Ç—Ä–µ–∫–µ—Ä –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
            - –î–æ–±–∞–≤—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
            - –†–µ–∞–ª–∏–∑—É–π –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            - –î–æ–±–∞–≤—å –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É
            - –°–¥–µ–ª–∞–π —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
            """,
            'travel': """
            - –°–æ–∑–¥–∞–π –ø–æ–∏—Å–∫ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–µ–ª–µ–π
            - –î–æ–±–∞–≤—å –∫–∞—Ä—Ç—ã –∏ –º–∞—Ä—à—Ä—É—Ç—ã
            - –†–µ–∞–ª–∏–∑—É–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–æ–µ–∑–¥–æ–∫
            - –î–æ–±–∞–≤—å –æ—Ç–∑—ã–≤—ã –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏
            - –°–¥–µ–ª–∞–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç
            """,
            'food': """
            - –°–æ–∑–¥–∞–π –∫–∞—Ç–∞–ª–æ–≥ —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Å –ø–æ–∏—Å–∫–æ–º
            - –î–æ–±–∞–≤—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –º–µ–Ω—é
            - –†–µ–∞–ª–∏–∑—É–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
            - –î–æ–±–∞–≤—å —Ç–∞–π–º–µ—Ä—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
            - –°–¥–µ–ª–∞–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∫–∞–ª–æ—Ä–∏–π
            """,
            'streaming': """
            - –°–æ–∑–¥–∞–π –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä —Å –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏
            - –î–æ–±–∞–≤—å —Å–∏—Å—Ç–µ–º—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            - –†–µ–∞–ª–∏–∑—É–π –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            - –î–æ–±–∞–≤—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ª–∞–π–∫–∏
            - –°–¥–µ–ª–∞–π –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ
            """,
            'chat': """
            - –°–æ–∑–¥–∞–π —Ä–µ–∞–ª—Ç–∞–π–º —á–∞—Ç —Å –∫–æ–º–Ω–∞—Ç–∞–º–∏
            - –î–æ–±–∞–≤—å —ç–º–æ–¥–∑–∏ –∏ —Å—Ç–∏–∫–µ—Ä—ã
            - –†–µ–∞–ª–∏–∑—É–π —Ñ–∞–π–ª–æ–≤—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è
            - –î–æ–±–∞–≤—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            - –°–¥–µ–ª–∞–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            """,
            'crypto': """
            - –°–æ–∑–¥–∞–π –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
            - –î–æ–±–∞–≤—å –≥—Ä–∞—Ñ–∏–∫–∏ —Ü–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
            - –†–µ–∞–ª–∏–∑—É–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø—Ä–∏–±—ã–ª–∏
            - –î–æ–±–∞–≤—å –Ω–æ–≤–æ—Å—Ç–∏ —Ä—ã–Ω–∫–∞
            - –°–¥–µ–ª–∞–π –∞–ª–µ—Ä—Ç—ã –ø–æ —Ü–µ–Ω–∞–º
            """,
            'ai': """
            - –°–æ–∑–¥–∞–π —á–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å AI
            - –î–æ–±–∞–≤—å —Ä–∞–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏ –ò–ò
            - –†–µ–∞–ª–∏–∑—É–π –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            - –î–æ–±–∞–≤—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–æ–≤
            - –°–¥–µ–ª–∞–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            """
        }
        
        return requirements.get(project_type, """
        - –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –æ–ø—ã—Ç–µ
        - –î–æ–±–∞–≤—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏
        - –û–±–µ—Å–ø–µ—á—å –±—ã—Å—Ç—Ä—É—é –∑–∞–≥—Ä—É–∑–∫—É –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
        """)

    def _parse_ai_response(self, content: str, analysis: Dict[str, Any]) -> ProjectResult:
        """–ü–∞—Ä—Å–∏—Ç –æ—Ç–≤–µ—Ç –æ—Ç AI –∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç ProjectResult"""
        
        files = []
        instructions = ""
        
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∞–π–ª—ã
            file_pattern = r'===FILE: (.+?)===\n(.*?)\n===END==='
            file_matches = re.findall(file_pattern, content, re.DOTALL)
            
            for filename, file_content in file_matches:
                file_type = filename.split('.')[-1].lower()
                files.append(GeneratedFile(
                    name=filename.strip(),
                    content=file_content.strip(),
                    type=file_type
                ))
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            instructions_pattern = r'===INSTRUCTIONS===\n(.*?)\n===END==='
            instructions_match = re.search(instructions_pattern, content, re.DOTALL)
            if instructions_match:
                instructions = instructions_match.group(1).strip()
            
            # –ï—Å–ª–∏ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥, –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∫–æ–¥ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º
            if not files:
                files = self._extract_code_blocks(content, analysis)
            
            if not files:
                return self._fallback_generation("", analysis)
                
            return ProjectResult(
                success=True,
                message="–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é AI!",
                files=files,
                structure=[f.name for f in files],
                instructions=instructions or "–û—Ç–∫—Ä–æ–π—Ç–µ index.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
                project_type=analysis['project_type'],
                name=analysis.get('name', 'AI Project'),
                description=description,
                technologies=analysis.get('technologies', []),
                features=analysis.get('features', [])
            )
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ AI: {e}")
            return self._fallback_generation("", analysis)

    def _extract_code_blocks(self, content: str, analysis: Dict[str, Any]) -> List[GeneratedFile]:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –±–ª–æ–∫–∏ –∫–æ–¥–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞ AI –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º"""
        
        files = []
        
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –±–ª–æ–∫–∏ –∫–æ–¥–∞ —Å —è–∑—ã–∫–∞–º–∏
        code_patterns = [
            (r'```html\n(.*?)\n```', 'index.html', 'html'),
            (r'```css\n(.*?)\n```', 'styles.css', 'css'), 
            (r'```javascript\n(.*?)\n```', 'script.js', 'js'),
            (r'```js\n(.*?)\n```', 'script.js', 'js')
        ]
        
        for pattern, default_name, file_type in code_patterns:
            matches = re.findall(pattern, content, re.DOTALL)
            for i, match in enumerate(matches):
                filename = default_name if i == 0 else f"{file_type}{i+1}.{file_type}"
                files.append(GeneratedFile(
                    name=filename,
                    content=match.strip(),
                    type=file_type
                ))
        
        return files

    def _fallback_generation(self, description: str, analysis: Dict[str, Any]) -> ProjectResult:
        """üöÄ –ú–û–©–ù–´–ô —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã!"""

        print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é fallback –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞
        project_type = analysis.get('project_type', 'mobile_app')
        features = analysis.get('features', [])

        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
        files = []

        # 1. HTML —Ñ–∞–π–ª —Å –ø—Ä–µ–º–∏—É–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏
        if self.graphics_enabled:
            selected_libraries = self.graphics_engine.get_library_imports(project_type, features)
            html_imports = self.graphics_engine.generate_html_imports(selected_libraries)
            js_init = self.graphics_engine.generate_js_initialization(selected_libraries)
        else:
            html_imports = ""
            js_init = ""

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML
        html_content = self._generate_mobile_html(description, html_imports, analysis)
        files.append(GeneratedFile(name="index.html", content=html_content, type="html"))

        # 2. CSS —Ñ–∞–π–ª—ã
        css_content = self._generate_mobile_css(analysis)
        files.append(GeneratedFile(name="styles.css", content=css_content, type="css"))

        # 3. JavaScript —Ñ–∞–π–ª—ã
        js_content = self._generate_mobile_js(description, js_init, analysis)
        files.append(GeneratedFile(name="app.js", content=js_content, type="js"))

        # 4. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        package_json = self._generate_package_json(analysis)
        files.append(GeneratedFile(name="package.json", content=package_json, type="json"))

        # 5. README
        readme_content = self._generate_readme(description, analysis)
        files.append(GeneratedFile(name="README.md", content=readme_content, type="md"))

        # 6. Service Worker –¥–ª—è PWA
        if '–º–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è' in features:
            sw_content = self._generate_service_worker()
            files.append(GeneratedFile(name="sw.js", content=sw_content, type="js"))

            manifest_content = self._generate_manifest(analysis)
            files.append(GeneratedFile(name="manifest.json", content=manifest_content, type="json"))

        structure = [f.name for f in files]

        return ProjectResult(
            success=True,
            message=f"üöÄ {len(files)} —Ñ–∞–π–ª–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ Fallback AI",
            files=files,
            structure=structure,
            instructions=self._generate_project_instructions(analysis, files),
            project_type=project_type,
            name=analysis.get('name', 'Mobile App Project'),
            description=description,
            technologies=analysis.get('technologies', ['HTML', 'CSS', 'JavaScript']),
            features=analysis.get('features', [])
        )

    async def generate_large_project_with_research(self, description: str, progress_callback=None) -> ProjectResult:
        """üöÄ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–ê–Ø –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –ø–æ–∏—Å–∫–æ–º –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è!"""
        if not self.groq_enabled:
            return self._fallback_generation(description, self.analyze_project_requirements(description))

        try:
            # –≠—Ç–∞–ø 1: –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –∞–Ω–∞–ª–∏–∑ —Å –≤–µ–±-–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º
            if progress_callback:
                progress_callback("üöÄ –ó–∞–ø—É—Å–∫ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...", 5)

            analysis = await self.analyze_project_with_research(description, progress_callback)
            file_structure = analysis.get('file_structure', [])

            # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
            file_structure.sort(key=lambda x: x.get('priority', 5))

            if progress_callback:
                progress_callback(f"üìã –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {len(file_structure)} —Ñ–∞–π–ª–æ–≤ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", 20)

            # –≠—Ç–∞–ø 2: –ü–∞–∫–µ—Ç–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
            generated_files = []
            total_files = len(file_structure)
            batch_size = 5  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ 5 —Ñ–∞–π–ª–æ–≤ –∑–∞ —Ä–∞–∑

            for i in range(0, total_files, batch_size):
                batch = file_structure[i:i + batch_size]
                batch_num = (i // batch_size) + 1
                total_batches = (total_files + batch_size - 1) // batch_size

                if progress_callback:
                    progress = 20 + (60 * i / total_files)
                    progress_callback(f"‚ö° –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞ {batch_num}/{total_batches}", progress)

                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–º –ø–∞–∫–µ—Ç–µ
                batch_files = self._generate_file_batch(batch, analysis, description)
                generated_files.extend(batch_files)

                # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞–º–∏: –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–∞–∫–µ—Ç–∞–º–∏
                if i + batch_size < total_files:  # –ù–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–∞–∫–µ—Ç
                    if progress_callback:
                        progress_callback(f"‚è≥ –ü–∞—É–∑–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞–º–∏ API...", progress + 5)
                    time.sleep(2)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–∞–∫–µ—Ç–∞–º–∏

            # –≠—Ç–∞–ø 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (package.json, README, etc.)
            if progress_callback:
                progress_callback("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...", 85)

            config_files = self._generate_config_files(analysis, description)
            generated_files.extend(config_files)

            if progress_callback:
                progress_callback("‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤!", 100)

            # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
            instructions = self._generate_project_instructions(analysis, generated_files)

            return ProjectResult(
                success=True,
                message=f"üöÄ –ë–æ–ª—å—à–æ–π –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω! {len(generated_files)} —Ñ–∞–π–ª–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ Groq AI",
                files=generated_files,
                structure=[f.name for f in generated_files],
                instructions=instructions,
                project_type=analysis.get('project_type', 'webapp'),
                name=analysis.get('name', 'Advanced AI Project'),
                description=description,
                technologies=analysis.get('technologies', ['HTML', 'CSS', 'JavaScript', '3D Graphics']),
                features=analysis.get('features', [])
            )

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–æ–ª—å—à–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞: {e}")
            if progress_callback:
                progress_callback("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Ä–µ–∂–∏–º...", 90)
            return self._fallback_generation(description, self.analyze_project_requirements(description))

    def _generate_file_batch(self, file_batch: List[Dict], analysis: Dict, description: str) -> List[GeneratedFile]:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–∞–∫–µ—Ç —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ Groq API"""
        generated_files = []

        for file_info in file_batch:
            try:
                file_path = file_info['path']
                file_type = file_info['type']
                file_desc = file_info.get('description', '')

                print(f"üìù –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ñ–∞–π–ª: {file_path}")

                # –°–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
                content = self._generate_file_content(file_path, file_type, file_desc, analysis, description)

                if content:
                    generated_files.append(GeneratedFile(
                        name=file_path,
                        content=content,
                        type=file_type
                    ))

            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ {file_info.get('path', 'unknown')}: {e}")
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏

        return generated_files

    def _generate_file_content(self, file_path: str, file_type: str, description: str, analysis: Dict, project_desc: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""

        # –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤
        prompts = {
            'html': f"""
–°–æ–∑–¥–∞–π HTML —Ñ–∞–π–ª: {file_path}
–û–ø–∏—Å–∞–Ω–∏–µ: {description}
–ü—Ä–æ–µ–∫—Ç: {project_desc}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞
- –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω
- Accessibility –ø–æ–¥–¥–µ—Ä–∂–∫–∞
- SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –∫–æ–¥ HTML –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –æ –∫–æ–¥–µ:
            """,
            'css': f"""
–°–æ–∑–¥–∞–π CSS —Ñ–∞–π–ª: {file_path}
–û–ø–∏—Å–∞–Ω–∏–µ: {description}
–ü—Ä–æ–µ–∫—Ç: {project_desc}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π CSS3
- Flexbox/Grid layout
- –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å
- –ö—Ä–∞—Å–∏–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –∫–æ–¥ CSS –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
            """,
            'js': f"""
–°–æ–∑–¥–∞–π JavaScript —Ñ–∞–π–ª: {file_path}
–û–ø–∏—Å–∞–Ω–∏–µ: {description}
–ü—Ä–æ–µ–∫—Ç: {project_desc}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π ES6+ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- –ß–∏—Å—Ç—ã–π –∫–æ–¥

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –∫–æ–¥ JavaScript –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
            """,
            'json': f"""
–°–æ–∑–¥–∞–π JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª: {file_path}
–û–ø–∏—Å–∞–Ω–∏–µ: {description}
–ü—Ä–æ–µ–∫—Ç: {project_desc}

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
            """,
            'py': f"""
–°–æ–∑–¥–∞–π Python —Ñ–∞–π–ª: {file_path}
–û–ø–∏—Å–∞–Ω–∏–µ: {description}
–ü—Ä–æ–µ–∫—Ç: {project_desc}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- PEP 8 —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã
- Type hints
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –∫–æ–¥ Python –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
            """
        }

        prompt = prompts.get(file_type, f"""
–°–æ–∑–¥–∞–π —Ñ–∞–π–ª {file_type}: {file_path}
–û–ø–∏—Å–∞–Ω–∏–µ: {description}
–ü—Ä–æ–µ–∫—Ç: {project_desc}

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:
        """)

        try:
            content = self._call_groq_api(prompt.strip(), self.models['code_generation'])
            return content.strip()
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–ª—è {file_path}: {e}")
            return f"// –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}"

    def _generate_config_files(self, analysis: Dict, description: str) -> List[GeneratedFile]:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞"""
        config_files = []

        # package.json –¥–ª—è –≤–µ–±-–ø—Ä–æ–µ–∫—Ç–æ–≤
        if 'javascript' in str(analysis.get('technologies', [])).lower():
            try:
                package_json_prompt = f"""
–°–æ–∑–¥–∞–π package.json –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: {description}
–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: {analysis.get('technologies', [])}
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏: {analysis.get('libraries', [])}

–í–∫–ª—é—á–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ dependencies –∏ scripts.
–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON:
                """

                package_content = self._call_groq_api(package_json_prompt, self.models['code_generation'])
                config_files.append(GeneratedFile(
                    name="package.json",
                    content=package_content,
                    type="json"
                ))
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ package.json: {e}")

        # README.md
        try:
            readme_prompt = f"""
–°–æ–∑–¥–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π README.md –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: {description}
–ê–Ω–∞–ª–∏–∑: {analysis}

–í–∫–ª—é—á–∏:
- –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
- –£—Å—Ç–∞–Ω–æ–≤–∫–∞
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
- –§—É–Ω–∫—Ü–∏–∏
- –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

–í–µ—Ä–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown:
            """

            readme_content = self._call_groq_api(readme_prompt, self.models['code_generation'])
            config_files.append(GeneratedFile(
                name="README.md",
                content=readme_content,
                type="md"
            ))
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ README.md: {e}")

        return config_files

    def _generate_project_instructions(self, analysis: Dict, files: List[GeneratedFile]) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–æ—Ç–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥"""
        project_type = analysis.get('project_type', '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ')
        features = analysis.get('features', [])

        # –ì–û–¢–û–í–´–ï –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        instructions = f"""
üéâ –í–∞—à–µ {project_type} –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!

‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å—Ä–∞–∑—É —Ä–∞–±–æ—Ç–∞–µ—Ç - –Ω–∏–∫–∞–∫–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
‚úÖ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ

üöÄ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
{chr(10).join([f'‚Ä¢ {feature}' for feature in features[:5]])}

üí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ –±—Ä–∞—É–∑–µ—Ä–æ–≤
üîß –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
üì± –ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤

–ü—Ä–æ—Å—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–∞–±–æ—Ç–æ–π —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º!
        """

        return instructions.strip()

    def generate_project(self, description: str, preferred_ai: str = 'auto', progress_callback=None) -> ProjectResult:
        """–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å Groq AI"""

        print(f"üöÄ –ó–ê–ü–£–°–ö –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –ì–ï–ù–ï–†–ê–¶–ò–ò!")
        print(f"üìã –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: {description[:100]}...")

        # –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π fallback –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –†–ï–ê–õ–¨–ù–´–• –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        print("üöÄ –ò—Å–ø–æ–ª—å–∑—É–µ–º –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –º–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π!")

        if progress_callback:
            progress_callback("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...", 5)

        # Fallback –∫ –±–∞–∑–æ–≤–æ–º—É –∞–Ω–∞–ª–∏–∑—É –µ—Å–ª–∏ Groq –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        print("‚ö†Ô∏è Groq –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é –±–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑...")

        if progress_callback:
            progress_callback("üîÑ –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞...", 10)

        analysis = self.analyze_project_requirements(description)

        print(f"üîç –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞:")
        print(f"   –¢–∏–ø: {analysis['project_type']}")
        print(f"   –°–ª–æ–∂–Ω–æ—Å—Ç—å: {analysis['complexity']}")
        print(f"   –§–∞–π–ª–æ–≤: {analysis['estimated_files']}")

        if progress_callback:
            progress_callback("üõ†Ô∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Ä–µ–∑–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π...", 50)

        return self._fallback_generation(description, analysis)

    def _generate_mobile_html(self, description: str, html_imports: str, analysis: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å 3D –≥—Ä–∞—Ñ–∏–∫–æ–π"""
        return f"""<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>–ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–≤</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="manifest" href="manifest.json">
    <meta name="theme-color" content="#0066ff">
    {html_imports}
</head>
<body>
    <div id="app">
        <header class="app-header">
            <div class="logo">
                <div class="cosmic-orb"></div>
                <h1>–ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫</h1>
            </div>
            <nav class="mentor-selector">
                <button class="mentor-btn active" data-mentor="musk">üöÄ –ò–ª–æ–Ω –ú–∞—Å–∫</button>
                <button class="mentor-btn" data-mentor="gates">üíª –ë–∏–ª–ª –ì–µ–π—Ç—Å</button>
                <button class="mentor-btn" data-mentor="bezos">üì¶ –î–∂–µ—Ñ –ë–µ–∑–æ—Å</button>
                <button class="mentor-btn" data-mentor="buffett">üí∞ –£–æ—Ä—Ä–µ–Ω –ë–∞—Ñ—Ñ–µ—Ç</button>
            </nav>
        </header>

        <main class="main-content">
            <div class="mentor-display">
                <div id="mentor-3d" class="mentor-3d-container">
                    <canvas id="mentor-canvas"></canvas>
                    <div class="mentor-ui">
                        <div class="mentor-status">ü§ñ –ì–æ—Ç–æ–≤ –∫ –±–µ—Å–µ–¥–µ</div>
                        <div class="mentor-emotion">üòä</div>
                    </div>
                </div>
            </div>

            <div class="interaction-panel">
                <div class="input-methods">
                    <button id="voice-input-btn" class="voice-btn">üé§ –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥</button>
                    <button id="text-input-btn" class="text-btn active">‚úèÔ∏è –¢–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥</button>
                </div>

                <div class="input-container">
                    <textarea id="question-input" placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å —Å–≤–æ–µ–º—É –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫—É..."></textarea>
                    <button id="send-btn" class="send-btn">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                </div>

                <div id="voice-indicator" class="voice-indicator hidden">
                    <div class="voice-waves">
                        <span></span><span></span><span></span><span></span>
                    </div>
                    <p>–ì–æ–≤–æ—Ä–∏—Ç–µ...</p>
                </div>
            </div>

            <div class="response-area">
                <div id="mentor-response" class="mentor-response">
                    <div class="wisdom-intro">
                        <h3>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h3>
                        <p>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. –ü–æ–ª—É—á–∏—Ç–µ –º—É–¥—Ä—ã–µ —Å–æ–≤–µ—Ç—ã, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –æ–ø—ã—Ç–∞ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π.</p>
                    </div>
                </div>
            </div>
        </main>

        <footer class="app-footer">
            <div class="controls">
                <button id="history-btn">üìö –ò—Å—Ç–æ—Ä–∏—è</button>
                <button id="settings-btn">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</button>
                <button id="offline-btn">üì± –û—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º</button>
            </div>
        </footer>
    </div>

    <script src="app.js"></script>
</body>
</html>"""

    def _generate_mobile_css(self, analysis: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç CSS –≤ —Å—Ç–∏–ª–µ –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç–Ω—ã—Ö —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–π"""
        return """/* –ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–≤ - Cosmic UI */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 25%, #16213e 50%, #0f3460 100%);
    color: #ffffff;
    min-height: 100vh;
    overflow-x: hidden;
}

/* –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π —Ñ–æ–Ω —Å –∑–≤–µ–∑–¥–∞–º–∏ */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.15) 0%, transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
    z-index: -1;
    animation: cosmicShift 20s ease-in-out infinite alternate;
}

@keyframes cosmicShift {
    0% { transform: rotate(0deg) scale(1); }
    100% { transform: rotate(5deg) scale(1.1); }
}

#app {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */
.app-header {
    padding: 1rem;
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    position: sticky;
    top: 0;
    z-index: 1000;
}

.logo {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
}

.cosmic-orb {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(45deg, #00ffff, #ff00ff, #ffff00);
    animation: orbPulse 3s ease-in-out infinite;
    box-shadow: 0 0 30px rgba(0, 255, 255, 0.5);
}

@keyframes orbPulse {
    0%, 100% { transform: scale(1) rotate(0deg); }
    50% { transform: scale(1.2) rotate(180deg); }
}

.logo h1 {
    font-size: 1.8rem;
    background: linear-gradient(45deg, #00ffff, #ff00ff);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 20px rgba(0, 255, 255, 0.3);
}

/* –í—ã–±–æ—Ä –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ */
.mentor-selector {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.mentor-btn {
    padding: 0.8rem 1.2rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
    background: rgba(255, 255, 255, 0.05);
    color: #ffffff;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    backdrop-filter: blur(10px);
}

.mentor-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 255, 255, 0.3);
    background: rgba(0, 255, 255, 0.1);
}

.mentor-btn.active {
    background: linear-gradient(45deg, #00ffff, #0066ff);
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
}

/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */
.main-content {
    flex: 1;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/* 3D –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ */
.mentor-display {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 20px;
    padding: 1rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(15px);
}

.mentor-3d-container {
    position: relative;
    height: 300px;
    border-radius: 15px;
    overflow: hidden;
    background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
}

#mentor-canvas {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.mentor-ui {
    position: absolute;
    bottom: 1rem;
    left: 1rem;
    right: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.mentor-status {
    background: rgba(0, 0, 0, 0.7);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
}

.mentor-emotion {
    font-size: 2rem;
    animation: emotionPulse 2s ease-in-out infinite;
}

@keyframes emotionPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

/* –ü–∞–Ω–µ–ª—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è */
.interaction-panel {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 20px;
    padding: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(15px);
}

.input-methods {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
}

.voice-btn, .text-btn {
    padding: 0.8rem 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
    background: rgba(255, 255, 255, 0.05);
    color: #ffffff;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.voice-btn:hover, .text-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(255, 255, 255, 0.1);
}

.voice-btn.active, .text-btn.active {
    background: linear-gradient(45deg, #ff00ff, #ff6600);
    box-shadow: 0 0 20px rgba(255, 0, 255, 0.3);
}

.input-container {
    display: flex;
    gap: 1rem;
    align-items: flex-end;
}

#question-input {
    flex: 1;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 15px;
    padding: 1rem;
    color: #ffffff;
    font-size: 1rem;
    resize: vertical;
    min-height: 60px;
    backdrop-filter: blur(10px);
}

#question-input::placeholder {
    color: rgba(255, 255, 255, 0.5);
}

.send-btn {
    padding: 1rem 2rem;
    background: linear-gradient(45deg, #00ffff, #0066ff);
    border: none;
    border-radius: 15px;
    color: #ffffff;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 5px 15px rgba(0, 255, 255, 0.3);
}

.send-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(0, 255, 255, 0.5);
}

/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ */
.voice-indicator {
    text-align: center;
    margin-top: 1rem;
    padding: 1rem;
    background: rgba(255, 0, 255, 0.1);
    border-radius: 15px;
    border: 1px solid rgba(255, 0, 255, 0.3);
}

.voice-indicator.hidden {
    display: none;
}

.voice-waves {
    display: flex;
    justify-content: center;
    gap: 0.2rem;
    margin-bottom: 0.5rem;
}

.voice-waves span {
    width: 4px;
    height: 20px;
    background: linear-gradient(45deg, #ff00ff, #00ffff);
    border-radius: 2px;
    animation: waveAnimation 1s ease-in-out infinite;
}

.voice-waves span:nth-child(2) { animation-delay: 0.1s; }
.voice-waves span:nth-child(3) { animation-delay: 0.2s; }
.voice-waves span:nth-child(4) { animation-delay: 0.3s; }

@keyframes waveAnimation {
    0%, 100% { height: 20px; }
    50% { height: 40px; }
}

/* –û–±–ª–∞—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤ */
.response-area {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 20px;
    padding: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(15px);
    min-height: 200px;
}

.mentor-response {
    line-height: 1.6;
    font-size: 1.1rem;
}

.wisdom-intro h3 {
    color: #00ffff;
    margin-bottom: 1rem;
    text-align: center;
}

.wisdom-intro p {
    text-align: center;
    opacity: 0.8;
}

/* –ü–æ–¥–≤–∞–ª */
.app-footer {
    padding: 1rem;
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(20px);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.controls {
    display: flex;
    justify-content: center;
    gap: 1rem;
}

.controls button {
    padding: 0.8rem 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: #ffffff;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
}

.controls button:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(255, 255, 255, 0.1);
    background: rgba(255, 255, 255, 0.1);
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
@media (max-width: 768px) {
    .mentor-selector {
        flex-direction: column;
    }

    .input-container {
        flex-direction: column;
    }

    .controls {
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .controls button {
        flex: 1;
        min-width: 140px;
    }
}

/* –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ */
.loading {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: #00ffff;
    animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}"""

    def _generate_mobile_js(self, description: str, js_init: str, analysis: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç JavaScript –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        return f"""// –ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–≤ - –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
class MentorApp {{
    constructor() {{
        this.currentMentor = 'musk';
        this.isListening = false;
        this.recognition = null;
        this.synth = window.speechSynthesis;
        this.conversationHistory = [];

        this.init();
        this.initializeGraphics();
    }}

    init() {{
        this.bindEvents();
        this.setupVoiceRecognition();
        this.loadConversationHistory();

        console.log('üöÄ –ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–≤ –∑–∞–ø—É—â–µ–Ω!');
    }}

    bindEvents() {{
        // –í—ã–±–æ—Ä –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        document.querySelectorAll('.mentor-btn').forEach(btn => {{
            btn.addEventListener('click', (e) => {{
                this.selectMentor(e.target.dataset.mentor);
            }});
        }});

        // –ú–µ—Ç–æ–¥—ã –≤–≤–æ–¥–∞
        document.getElementById('voice-input-btn').addEventListener('click', () => {{
            this.startVoiceInput();
        }});

        document.getElementById('text-input-btn').addEventListener('click', () => {{
            this.activateTextInput();
        }});

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞
        document.getElementById('send-btn').addEventListener('click', () => {{
            this.sendQuestion();
        }});

        // Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        document.getElementById('question-input').addEventListener('keydown', (e) => {{
            if (e.key === 'Enter' && !e.shiftKey) {{
                e.preventDefault();
                this.sendQuestion();
            }}
        }});

        // –£–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–Ω–æ–ø–∫–∏
        document.getElementById('history-btn').addEventListener('click', () => {{
            this.showHistory();
        }});

        document.getElementById('settings-btn').addEventListener('click', () => {{
            this.showSettings();
        }});

        document.getElementById('offline-btn').addEventListener('click', () => {{
            this.enableOfflineMode();
        }});
    }}

    initializeGraphics() {{
        {js_init}

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è 3D —Å—Ü–µ–Ω—ã –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        this.setup3DMentor();
    }}

    setup3DMentor() {{
        const canvas = document.getElementById('mentor-canvas');
        const container = document.querySelector('.mentor-3d-container');

        // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é 3D —Å—Ü–µ–Ω—É
        if (typeof THREE !== 'undefined') {{
            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera(75, container.offsetWidth / container.offsetHeight, 0.1, 1000);
            const renderer = new THREE.WebGLRenderer({{ canvas: canvas, alpha: true }});

            renderer.setSize(container.offsetWidth, container.offsetHeight);
            renderer.setClearColor(0x000000, 0);

            // –°–æ–∑–¥–∞–µ–º –≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –≥–æ–ª–æ–≤—É –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
            const geometry = new THREE.SphereGeometry(1, 32, 32);
            const material = new THREE.MeshBasicMaterial({{
                color: 0x00ffff,
                wireframe: true,
                transparent: true,
                opacity: 0.7
            }});

            const mentorHead = new THREE.Mesh(geometry, material);
            scene.add(mentorHead);

            camera.position.z = 3;

            // –ê–Ω–∏–º–∞—Ü–∏—è
            const animate = () => {{
                requestAnimationFrame(animate);
                mentorHead.rotation.y += 0.01;
                mentorHead.rotation.x += 0.005;
                renderer.render(scene, camera);
            }};

            animate();

            this.mentorHead = mentorHead;
            this.renderer = renderer;
        }} else {{
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ –±–µ–∑ WebGL
            canvas.style.background = 'linear-gradient(45deg, #0066ff, #00ffff)';
        }}
    }}

    selectMentor(mentorId) {{
        document.querySelectorAll('.mentor-btn').forEach(btn => {{
            btn.classList.remove('active');
        }});

        document.querySelector(`[data-mentor="${{mentorId}}"]`).classList.add('active');
        this.currentMentor = mentorId;

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        const statusEl = document.querySelector('.mentor-status');
        const mentorNames = {{
            'musk': 'üöÄ –ò–ª–æ–Ω –ú–∞—Å–∫ –≥–æ—Ç–æ–≤ –∫ –±–µ—Å–µ–¥–µ',
            'gates': 'üíª –ë–∏–ª–ª –ì–µ–π—Ç—Å –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å',
            'bezos': 'üì¶ –î–∂–µ—Ñ –ë–µ–∑–æ—Å —Å–ª—É—à–∞–µ—Ç',
            'buffett': 'üí∞ –£–æ—Ä—Ä–µ–Ω –ë–∞—Ñ—Ñ–µ—Ç –∂–¥–µ—Ç –≤–æ–ø—Ä–æ—Å'
        }};

        statusEl.textContent = mentorNames[mentorId];

        // –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ–Ω—ã –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        if (this.mentorHead) {{
            const colors = {{
                'musk': 0xff0000,
                'gates': 0x0000ff,
                'bezos': 0xff9900,
                'buffett': 0x00ff00
            }};

            this.mentorHead.material.color.setHex(colors[mentorId]);
        }}

        console.log(`–í—ã–±—Ä–∞–Ω –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫: ${{mentorId}}`);
    }}

    setupVoiceRecognition() {{
        if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {{
            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
            this.recognition = new SpeechRecognition();

            this.recognition.continuous = false;
            this.recognition.interimResults = false;
            this.recognition.lang = 'ru-RU';

            this.recognition.onstart = () => {{
                this.isListening = true;
                document.getElementById('voice-indicator').classList.remove('hidden');
                console.log('üé§ –°–ª—É—à–∞—é...');
            }};

            this.recognition.onresult = (event) => {{
                const text = event.results[0][0].transcript;
                document.getElementById('question-input').value = text;
                this.sendQuestion();
            }};

            this.recognition.onend = () => {{
                this.isListening = false;
                document.getElementById('voice-indicator').classList.add('hidden');
            }};

            this.recognition.onerror = (event) => {{
                console.error('–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏:', event.error);
                this.isListening = false;
                document.getElementById('voice-indicator').classList.add('hidden');
            }};
        }}
    }}

    startVoiceInput() {{
        if (!this.recognition) {{
            alert('–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ');
            return;
        }}

        if (this.isListening) {{
            this.recognition.stop();
        }} else {{
            this.recognition.start();
        }}

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
        document.querySelector('.voice-btn').classList.add('active');
        document.querySelector('.text-btn').classList.remove('active');
    }}

    activateTextInput() {{
        document.querySelector('.text-btn').classList.add('active');
        document.querySelector('.voice-btn').classList.remove('active');
        document.getElementById('question-input').focus();
    }}

    async sendQuestion() {{
        const input = document.getElementById('question-input');
        const question = input.value.trim();

        if (!question) return;

        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        input.value = '';

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        this.showLoading();

        // –ê–Ω–∏–º–∞—Ü–∏—è "–¥—É–º–∞—é—â–µ–≥–æ" –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        this.animateMentorThinking();

        try {{
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–æ–≤ –∫ –±—ç–∫–µ–Ω–¥—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
            const response = await this.getMentorResponse(question);

            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç–≤–µ—Ç
            this.displayResponse(response, question);

            // –û–∑–≤—É—á–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç
            this.speakResponse(response);

        }} catch (error) {{
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞:', error);
            this.displayResponse('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', question);
        }}

        this.hideLoading();
    }}

    async getMentorResponse(question) {{
        // –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–∑–æ–≤–∞ –∫ AI API
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ backend

        const responses = {{
            'musk': [
                '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ - —ç—Ç–æ –∫–ª—é—á –∫ –±—É–¥—É—â–µ–º—É. –î—É–º–∞–π—Ç–µ –æ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ –∏ –Ω–µ –±–æ–π—Ç–µ—Å—å —Ä–∏—Å–∫–æ–≤–∞—Ç—å.',
                '–ü–µ—Ä–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã - –æ—Å–Ω–æ–≤–∞ –º–æ–µ–≥–æ –º—ã—à–ª–µ–Ω–∏—è. –†–∞–∑–±–∏—Ä–∞–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–µ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ.',
                '–ù–µ—É–¥–∞—á–∞ - —ç—Ç–æ –æ–ø—Ü–∏—è. –ï—Å–ª–∏ –≤—ã –Ω–µ —Ç–µ—Ä–ø–∏—Ç–µ –Ω–µ—É–¥–∞—á, –∑–Ω–∞—á–∏—Ç, –≤—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã.'
            ],
            'gates': [
                '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ - —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –±—É–¥—É—â–µ–µ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞.',
                '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ–ª–∂–Ω—ã —Å–ª—É–∂–∏—Ç—å –ª—é–¥—è–º, –∞ –Ω–µ –Ω–∞–æ–±–æ—Ä–æ—Ç. –í—Å–µ–≥–¥–∞ –¥—É–º–∞–π—Ç–µ –æ –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ –æ–±—â–µ—Å—Ç–≤–æ.',
                '–ß–∏—Ç–∞–π—Ç–µ –º–Ω–æ–≥–æ, —É—á–∏—Ç–µ—Å—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ. –ó–Ω–∞–Ω–∏—è - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ —É –≤–∞—Å –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ç–Ω–∏–º–µ—Ç.'
            ],
            'bezos': [
                '–ö–ª–∏–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ. –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ - —Å–ª–µ–¥—Å—Ç–≤–∏–µ —ç—Ç–æ–≥–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞.',
                '–î–µ–Ω—å –ø–µ—Ä–≤—ã–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Å—Ç–∞—Ä—Ç–∞–ø-–º–µ–Ω—Ç–∞–ª–∏—Ç–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏.',
                '–ò–∑–æ–±—Ä–µ—Ç–∞–π—Ç–µ –∏ —É–ø—Ä–æ—â–∞–π—Ç–µ. –°–ª–æ–∂–Ω–æ—Å—Ç—å - –≤—Ä–∞–≥ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.'
            ],
            'buffett': [
                '–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ —Ç–æ, —á—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –≤–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –≤ –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å.',
                '–í—Ä–µ–º—è - –¥—Ä—É–≥ —Ö–æ—Ä–æ—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ –≤—Ä–∞–≥ –ø–ª–æ—Ö–æ–≥–æ. –¢–µ—Ä–ø–µ–Ω–∏–µ - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É.',
                '–¶–µ–Ω–∞ - —ç—Ç–æ —Ç–æ, —á—Ç–æ –≤—ã –ø–ª–∞—Ç–∏—Ç–µ, —Ü–µ–Ω–Ω–æ—Å—Ç—å - —ç—Ç–æ —Ç–æ, —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ.'
            ]
        }};

        // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ API
        await new Promise(resolve => setTimeout(resolve, 2000));

        const mentorResponses = responses[this.currentMentor] || responses['musk'];
        const randomResponse = mentorResponses[Math.floor(Math.random() * mentorResponses.length)];

        return randomResponse;
    }}

    displayResponse(response, question) {{
        const responseArea = document.getElementById('mentor-response');

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏–∏
        this.conversationHistory.unshift({{
            question,
            response,
            mentor: this.currentMentor,
            timestamp: new Date().toISOString()
        }});

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('mentorHistory', JSON.stringify(this.conversationHistory));

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç–≤–µ—Ç —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        responseArea.innerHTML = `
            <div class="conversation-item">
                <div class="question">
                    <strong>–í–æ–ø—Ä–æ—Å:</strong> ${{question}}
                </div>
                <div class="response">
                    <strong>–û—Ç–≤–µ—Ç –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞:</strong> ${{response}}
                </div>
                <div class="timestamp">
                    ${{new Date().toLocaleString()}}
                </div>
            </div>
        `;

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        responseArea.style.opacity = '0';
        requestAnimationFrame(() => {{
            responseArea.style.transition = 'opacity 0.5s ease';
            responseArea.style.opacity = '1';
        }});
    }}

    speakResponse(text) {{
        if (this.synth && this.synth.speaking) {{
            this.synth.cancel();
        }}

        const utterance = new SpeechSynthesisUtterance(text);

        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–æ–ª–æ—Å–∞ –¥–ª—è –º—É–∂—á–∏–Ω-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤
        const mentorVoices = {{
            'musk': {{ lang: 'en-US', pitch: 0.9, rate: 0.9, voiceName: 'male' }},
            'gates': {{ lang: 'en-US', pitch: 0.8, rate: 0.8, voiceName: 'male' }},
            'bezos': {{ lang: 'en-US', pitch: 0.7, rate: 0.9, voiceName: 'male' }},
            'buffett': {{ lang: 'en-US', pitch: 0.6, rate: 0.7, voiceName: 'male' }}
        }};

        const mentorConfig = mentorVoices[this.currentMentor] || mentorVoices['musk'];

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–æ–ª–æ—Å
        utterance.lang = mentorConfig.lang;
        utterance.pitch = mentorConfig.pitch;
        utterance.rate = mentorConfig.rate;

        // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –º—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å
        const voices = this.synth.getVoices();
        const maleVoice = voices.find(voice =>
            voice.lang.includes('en') &&
            (voice.name.includes('Male') || voice.name.includes('male') || !voice.name.includes('female'))
        ) || voices.find(voice => voice.lang.includes('en'));

        if (maleVoice) {{
            utterance.voice = maleVoice;
            console.log(`üé§ Using voice: ${{maleVoice.name}} for ${{this.currentMentor}}`);
        }}

        // –ê–Ω–∏–º–∞—Ü–∏—è –≥–æ–≤–æ—Ä—è—â–µ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        utterance.onstart = () => {{
            document.querySelector('.mentor-emotion').textContent = 'üó£Ô∏è';
            this.animateMentorSpeaking();
        }};

        utterance.onend = () => {{
            document.querySelector('.mentor-emotion').textContent = 'üòä';
            this.stopMentorAnimation();
        }};

        utterance.onerror = (event) => {{
            console.error('Speech synthesis error:', event.error);
            document.querySelector('.mentor-emotion').textContent = 'üòä';
            this.stopMentorAnimation();
        }};

        if (this.synth) {{
            this.synth.speak(utterance);
        }}
    }}

    animateMentorThinking() {{
        document.querySelector('.mentor-emotion').textContent = 'ü§î';
        if (this.mentorHead) {{
            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–∏ "—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–∏"
            this.mentorHead.rotation.speed = 0.02;
        }}
    }}

    animateMentorSpeaking() {{
        if (this.mentorHead) {{
            // –ü—É–ª—å—Å–∞—Ü–∏—è –ø—Ä–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ
            const scale = 1 + Math.sin(Date.now() * 0.01) * 0.1;
            this.mentorHead.scale.setScalar(scale);
        }}
    }}

    stopMentorAnimation() {{
        if (this.mentorHead) {{
            this.mentorHead.scale.setScalar(1);
            this.mentorHead.rotation.speed = 0.01;
        }}
    }}

    showLoading() {{
        const sendBtn = document.getElementById('send-btn');
        sendBtn.innerHTML = '<div class="loading"></div>';
        sendBtn.disabled = true;
    }}

    hideLoading() {{
        const sendBtn = document.getElementById('send-btn');
        sendBtn.innerHTML = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å';
        sendBtn.disabled = false;
    }}

    showHistory() {{
        const history = this.conversationHistory.slice(0, 10); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
        let historyHtml = '<h3>üìö –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤</h3>';

        if (history.length === 0) {{
            historyHtml += '<p>–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞. –ó–∞–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å!</p>';
        }} else {{
            history.forEach((item, index) => {{
                historyHtml += `
                    <div class="history-item">
                        <strong>–ù–∞—Å—Ç–∞–≤–Ω–∏–∫:</strong> ${{item.mentor}}<br>
                        <strong>–í–æ–ø—Ä–æ—Å:</strong> ${{item.question}}<br>
                        <strong>–û—Ç–≤–µ—Ç:</strong> ${{item.response}}<br>
                        <small>${{new Date(item.timestamp).toLocaleString()}}</small>
                    </div>
                `;
            }});
        }}

        document.getElementById('mentor-response').innerHTML = historyHtml;
    }}

    showSettings() {{
        const settingsHtml = `
            <h3>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
            <div class="settings-panel">
                <div class="setting-item">
                    <label>–°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏:</label>
                    <input type="range" id="speech-rate" min="0.5" max="2" step="0.1" value="0.8">
                </div>
                <div class="setting-item">
                    <label>–í—ã—Å–æ—Ç–∞ –≥–æ–ª–æ—Å–∞:</label>
                    <input type="range" id="speech-pitch" min="0.5" max="2" step="0.1" value="1.2">
                </div>
                <div class="setting-item">
                    <button onclick="app.clearHistory()">–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é</button>
                </div>
            </div>
        `;

        document.getElementById('mentor-response').innerHTML = settingsHtml;
    }}

    enableOfflineMode() {{
        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
        if ('serviceWorker' in navigator) {{
            navigator.serviceWorker.register('sw.js')
                .then(() => {{
                    alert('‚úÖ –û—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!');
                }})
                .catch((error) => {{
                    console.error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:', error);
                }});
        }}
    }}

    loadConversationHistory() {{
        const saved = localStorage.getItem('mentorHistory');
        if (saved) {{
            this.conversationHistory = JSON.parse(saved);
        }}
    }}

    clearHistory() {{
        this.conversationHistory = [];
        localStorage.removeItem('mentorHistory');
        alert('–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞!');
    }}
}}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new MentorApp();

// PWA support
if ('serviceWorker' in navigator) {{
    window.addEventListener('load', () => {{
        navigator.serviceWorker.register('sw.js');
    }});
}}"""

    def _generate_package_json(self, analysis: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç package.json"""
        return """{
  "name": "ai-mentor-billionaires",
  "version": "1.0.0",
  "description": "–ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–≤ - –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å 3D –≥—Ä–∞—Ñ–∏–∫–æ–π",
  "main": "index.html",
  "scripts": {
    "start": "python -m http.server 8000",
    "serve": "python -m http.server 8000"
  },
  "keywords": ["ai", "mentor", "3d", "mobile", "pwa", "billionaire"],
  "author": "AI Generator",
  "license": "MIT",
  "dependencies": {
    "three": "^0.157.0",
    "gsap": "^3.12.2"
  }
}"""

    def _generate_service_worker(self) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Service Worker –¥–ª—è PWA"""
        return """// Service Worker –¥–ª—è –ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
const CACHE_NAME = 'mentor-v1';
const urlsToCache = [
    '/',
    '/index.html',
    '/styles.css',
    '/app.js',
    '/manifest.json'
];

self.addEventListener('install', (event) => {
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then((cache) => cache.addAll(urlsToCache))
    );
});

self.addEventListener('fetch', (event) => {
    event.respondWith(
        caches.match(event.request)
            .then((response) => {
                if (response) {
                    return response;
                }
                return fetch(event.request);
            })
    );
});"""

    def _generate_manifest(self, analysis: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Web App Manifest"""
        return """{
  "name": "–ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–≤",
  "short_name": "AI Mentor",
  "description": "–ü–æ–ª—É—á–∞–π—Ç–µ —Å–æ–≤–µ—Ç—ã –æ—Ç –ò–ò-–≤–µ—Ä—Å–∏–π —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π",
  "start_url": "/",
  "display": "standalone",
  "background_color": "#0c0c0c",
  "theme_color": "#0066ff",
  "orientation": "portrait",
  "icons": [
    {
      "src": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Ccircle cx='50' cy='50' r='40' fill='%2300ffff'/%3E%3C/svg%3E",
      "sizes": "192x192",
      "type": "image/svg+xml"
    }
  ]
}"""

    def _generate_readme(self, description: str, analysis: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π README"""
        features_list = ''.join([f"- {feature}\\n" for feature in analysis.get('features', [])])

        return f"""# üöÄ –ò–ò –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–≤

–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–µ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è iPhone —Å 3D –≥—Ä–∞—Ñ–∏–∫–æ–π –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º.

## ‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

{features_list}

## üéØ –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏

- üöÄ **–ò–ª–æ–Ω –ú–∞—Å–∫** - –ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –∏ –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
- üíª **–ë–∏–ª–ª –ì–µ–π—Ç—Å** - –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- üì¶ **–î–∂–µ—Ñ –ë–µ–∑–æ—Å** - E-commerce –∏ –æ–±–ª–∞—á–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
- üí∞ **–£–æ—Ä—Ä–µ–Ω –ë–∞—Ñ—Ñ–µ—Ç** - –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ –±–∏–∑–Ω–µ—Å-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏

## üõ† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

- **3D –≥—Ä–∞—Ñ–∏–∫–∞**: Three.js, WebGL
- **–ê–Ω–∏–º–∞—Ü–∏–∏**: GSAP
- **–ì–æ–ª–æ—Å–æ–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ**: Web Speech API
- **PWA**: Service Workers, Web App Manifest
- **–î–∏–∑–∞–π–Ω**: Cosmic UI –≤ —Å—Ç–∏–ª–µ –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç–Ω—ã—Ö —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–π

## üì± –£—Å—Ç–∞–Ω–æ–≤–∫–∞

1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
2. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω" (iOS Safari)
3. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –Ω–∞—Ç–∏–≤–Ω–æ–µ

## üöÄ –ó–∞–ø—É—Å–∫

```bash
npm start
```

–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000

## üí´ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π

–ö–∞–∂–¥—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –æ–±–ª–∞–¥–∞–µ—Ç –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–π –Ω–∞:
- –ü–æ—Å–ª–µ–¥–Ω–∏—Ö 20 –∏–Ω—Ç–µ—Ä–≤—å—é
- –ë–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
- –ë–∏–∑–Ω–µ—Å-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è—Ö
- –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ñ–∏–ª—è—Ö

## üéÆ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è

1. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
2. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–º –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–º
3. –ü–æ–ª—É—á–∏—Ç–µ –º—É–¥—Ä—ã–π —Å–æ–≤–µ—Ç —Å 3D –∞–Ω–∏–º–∞—Ü–∏–µ–π
4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–∑—É—á–µ–Ω–∏—è

---

*–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ AI –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤*"""

    def analyze_user_request(self, message: str) -> RequestAnalysis:
        """üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è"""
        message_lower = message.lower()

        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
        create_keywords = ['—Å–æ–∑–¥–∞–π', '—Å–æ–∑–¥–∞—Ç—å', '—Å–¥–µ–ª–∞–π', '—Å–¥–µ–ª–∞—Ç—å', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–π', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å', '–ø–æ—Å—Ç—Ä–æ–π', '–ø–æ—Å—Ç—Ä–æ–∏—Ç—å', '–≥–µ–Ω–µ—Ä–∏—Ä—É–π']
        modify_keywords = ['–∏–∑–º–µ–Ω–∏', '–∏–∑–º–µ–Ω–∏—Ç—å', '–¥–æ—Ä–∞–±–æ—Ç–∞–π', '–¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å', '—É–ª—É—á—à–∏', '—É–ª—É—á—à–∏—Ç—å', '–∏—Å–ø—Ä–∞–≤—å', '–∏—Å–ø—Ä–∞–≤–∏—Ç—å']

        # –¢–∏–ø—ã –ø—Ä–æ–µ–∫—Ç–æ–≤
        project_types = {
            '–∏–∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫': ProjectType.AI_MENTOR,
            'ai –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫': ProjectType.AI_MENTOR,
            '–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫': ProjectType.AI_MENTOR,
            '–º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä': ProjectType.AI_MENTOR,
            '–º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ': ProjectType.MOBILE_APP,
            '–º–æ–±–∏–ª—å–Ω—ã–π': ProjectType.MOBILE_APP,
            '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ': ProjectType.MOBILE_APP,
            '–≤–µ–± –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ': ProjectType.WEB_APP,
            '–≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ': ProjectType.WEB_APP,
            '—Å–∞–π—Ç': ProjectType.WEB_APP,
            '–ª–µ–Ω–¥–∏–Ω–≥': ProjectType.WEB_APP,
            '–∏–≥—Ä–∞': ProjectType.GAME,
            '–¥–∞—à–±–æ—Ä–¥': ProjectType.DASHBOARD,
            'dashboard': ProjectType.DASHBOARD
        }

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞
        is_create = any(keyword in message_lower for keyword in create_keywords)
        is_modify = any(keyword in message_lower for keyword in modify_keywords)

        if is_create:
            request_type = RequestType.CREATE_NEW_PROJECT
        elif is_modify:
            request_type = RequestType.MODIFY_EXISTING
        else:
            request_type = RequestType.CHAT_QUESTION

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞
        detected_project_type = None
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ project_types —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, –∞ –Ω–µ —Å–ø–∏—Å–æ–∫
            if isinstance(project_types, dict):
                for keyword, project_type in project_types.items():
                    if keyword in message_lower:
                        detected_project_type = project_type
                        break
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: project_types –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º: {type(project_types)}")
        except AttributeError as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ project_types.items(): {e}")
            print(f"‚ö†Ô∏è –¢–∏–ø project_types: {type(project_types)}")
            print(f"‚ö†Ô∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ project_types: {project_types}")

        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        features = []
        feature_keywords = {
            '3d': '3D –≥—Ä–∞—Ñ–∏–∫–∞',
            '–≥–æ–ª–æ—Å': '–≥–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥',
            '–≥–æ–ª–æ—Å–æ–≤–æ–π': '–≥–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥',
            '—Ä–µ—á—å': '–≥–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥',
            '–∞–Ω–∏–º–∞—Ü–∏—è': '–∞–Ω–∏–º–∞—Ü–∏–∏',
            '–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π': '–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
            '–∏–∏': '–ò–ò –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
            'ai': '–ò–ò –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
            '—á–∞—Ç': '—á–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏',
            '–º–æ–±–∏–ª—å–Ω': '–º–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è',
            '–æ—Ñ–ª–∞–π–Ω': '–æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º',
            '–∏—Å—Ç–æ—Ä–∏—è': '–∏—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤'
        }

        try:
            if isinstance(feature_keywords, dict):
                for keyword, feature in feature_keywords.items():
                    if keyword in message_lower:
                        features.append(feature)
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: feature_keywords –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º: {type(feature_keywords)}")
        except AttributeError as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ feature_keywords.items(): {e}")
            print(f"‚ö†Ô∏è –¢–∏–ø feature_keywords: {type(feature_keywords)}")

        # –í—ã—á–∏—Å–ª—è–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
        confidence = 0.5
        if is_create or is_modify:
            confidence += 0.3
        if detected_project_type:
            confidence += 0.2
        if features:
            confidence += min(len(features) * 0.1, 0.3)

        confidence = min(confidence, 1.0)

        return RequestAnalysis(
            request_type=request_type,
            project_type=detected_project_type,
            features=features,
            confidence=confidence,
            raw_message=message
        )

    def generate_project_recommendations(self, files: List[GeneratedFile], project_type: ProjectType) -> List[str]:
        """üéØ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
        recommendations = []

        # –ë–∞–∑–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É –ø—Ä–æ–µ–∫—Ç–∞
        if project_type == ProjectType.AI_MENTOR:
            recommendations.extend([
                "üß† –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –∏–Ω—Ç–µ—Ä–≤—å—é –º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–æ–≤",
                "üé® –£–ª—É—á—à–∏—Ç—å 3D –º–æ–¥–µ–ª–∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤",
                "üîä –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏",
                "üìö –†–∞—Å—à–∏—Ä–∏—Ç—å –±–∞–∑—É –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–∏–∫"
            ])
        elif project_type == ProjectType.MOBILE_APP:
            recommendations.extend([
                "üì± –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–∫—Ä–∞–Ω–æ–≤",
                "‚ö° –î–æ–±–∞–≤–∏—Ç—å –æ—Ñ–ª–∞–π–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å",
                "üîî –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
                "üìä –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
            ])
        elif project_type == ProjectType.WEB_APP:
            recommendations.extend([
                "üöÄ –í–Ω–µ–¥—Ä–∏—Ç—å PWA —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å",
                "üîç –£–ª—É—á—à–∏—Ç—å SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é",
                "‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏",
                "üîê –î–æ–±–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
            ])

        # –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations.extend([
            "üéØ –ü—Ä–æ–≤–µ—Å—Ç–∏ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
            "üìà –î–æ–±–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –º–µ—Ç—Ä–∏–∫ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏",
            "üõ°Ô∏è –£–ª—É—á—à–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
            "‚ôø –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É accessibility"
        ])

        return recommendations[:6]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ø-6 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π

    def get_contextual_suggestions(self, message: str) -> List[str]:
        """üí° –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        message_lower = message.lower()
        suggestions = []

        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        if '—Å–æ–∑–¥–∞–π' in message_lower or '—Å–æ–∑–¥–∞—Ç—å' in message_lower:
            suggestions.extend([
                "–î–æ–±–∞–≤–∏—Ç—å 3D –∞–Ω–∏–º–∞—Ü–∏–∏",
                "–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
                "–°–æ–∑–¥–∞—Ç—å –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é",
                "–î–æ–±–∞–≤–∏—Ç—å –ò–ò —Ñ—É–Ω–∫—Ü–∏–∏"
            ])

        if '–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫' in message_lower or '–º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä' in message_lower:
            suggestions.extend([
                "–ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä–≤—å—é –ò–ª–æ–Ω–∞ –ú–∞—Å–∫–∞",
                "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ë–∏–ª–ª–∞ –ì–µ–π—Ç—Å–∞",
                "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –î–∂–µ—Ñ—Ñ–∞ –ë–µ–∑–æ—Å–∞",
                "–§–∏–ª–æ—Å–æ—Ñ–∏—è –£–æ—Ä—Ä–µ–Ω–∞ –ë–∞—Ñ—Ñ–µ—Ç–∞"
            ])

        if '–≥–æ–ª–æ—Å' in message_lower:
            suggestions.extend([
                "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏",
                "–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏",
                "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤",
                "–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"
            ])

        if '3d' in message_lower:
            suggestions.extend([
                "Three.js –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
                "Babylon.js –∞–Ω–∏–º–∞—Ü–∏–∏",
                "WebGL —ç—Ñ—Ñ–µ–∫—Ç—ã",
                "VR/AR –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
            ])

        # –ï—Å–ª–∏ –Ω–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, –¥–∞–µ–º –æ–±—â–∏–µ
        if not suggestions:
            suggestions = [
                "–°–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                "–î–æ–±–∞–≤–∏—Ç—å –ò–ò –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
                "–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω",
                "–°–æ–∑–¥–∞—Ç—å –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é",
                "–î–æ–±–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                "–í–Ω–µ–¥—Ä–∏—Ç—å 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é"
            ]

        return suggestions[:4]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ø-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

    def _get_enhanced_mentor_response(self, message: str, mentor: str) -> str:
        """–£–ª—É—á—à–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º"""

        message_lower = message.lower()

        # –ö–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ —Ç–µ–º–∞–º
        if any(word in message_lower for word in ['–≤–æ–∑—Ä–∞—Å—Ç', '–ª–µ—Ç', '—Å—Ç–∞—Ä—ã–π', '–º–æ–ª–æ–¥–æ–π']):
            ages = {
                'musk': '–ú–Ω–µ 52 –≥–æ–¥–∞. –í–æ–∑—Ä–∞—Å—Ç - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ, –≥–ª–∞–≤–Ω–æ–µ - –Ω–µ —Ç–µ—Ä—è—Ç—å –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ –∫ –±—É–¥—É—â–µ–º—É –∏ –∂–µ–ª–∞–Ω–∏–µ —Ä–µ—à–∞—Ç—å –≤–∞–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞.',
                'gates': '–ú–Ω–µ 68 –ª–µ—Ç. –ó–∞ —ç—Ç–∏ –≥–æ–¥—ã —è –ø–æ–Ω—è–ª: –Ω–∞—Å—Ç–æ—è—â–∏–π —É—Å–ø–µ—Ö –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –Ω–µ –¥–µ–Ω—å–≥–∞–º–∏, –∞ —Ç–µ–º, —Å–∫–æ–ª—å–∫–∏–º –ª—é–¥—è–º —Ç—ã –ø–æ–º–æ–≥.',
                'bezos': '–ú–Ω–µ 60 –ª–µ—Ç. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Å—Ç–∞—Ä–∞—é—Å—å –¥—É–º–∞—Ç—å –∫–∞–∫ –≤ "–î–µ–Ω—å –ü–µ—Ä–≤—ã–π" - —Å —ç–Ω—Ç—É–∑–∏–∞–∑–º–æ–º —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä–∞ –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–º –≤–∏–¥–µ–Ω–∏–µ–º.',
                'buffett': '–ú–Ω–µ 93 –≥–æ–¥–∞ –∏ —è –¥–æ —Å–∏—Ö –ø–æ—Ä —É—á—É—Å—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - —ç—Ç–æ –∏–≥—Ä–∞ –Ω–∞ –≤—Å—é –∂–∏–∑–Ω—å, –∏ –æ–ø—ã—Ç –∑–¥–µ—Å—å –±–µ—Å—Ü–µ–Ω–µ–Ω.'
            }
            return ages.get(mentor, ages['musk'])

        elif any(word in message_lower for word in ['–¥–µ–Ω—å–≥–∏', '–±–æ–≥–∞—Ç—Å—Ç–≤–æ', '–¥–æ—Ö–æ–¥—ã', '–∑–∞—Ä–ø–ª–∞—Ç–∞']):
            money = {
                'musk': '–î–µ–Ω—å–≥–∏ - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –≤–æ–ø–ª–æ—â–µ–Ω–∏—è –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö —Ü–µ–ª–µ–π. –Ø –∏–Ω–≤–µ—Å—Ç–∏—Ä—É—é –≤ –±—É–¥—É—â–µ–µ: —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏, –∫–æ—Å–º–æ—Å, –Ω–µ–π—Ä–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.',
                'gates': '–ë–æ–≥–∞—Ç—Å—Ç–≤–æ –¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ—à–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è. –ì–ª–∞–≤–Ω–æ–µ - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –º—É–¥—Ä–æ.',
                'bezos': '–Ø —Ñ–æ–∫—É—Å–∏—Ä—É—é—Å—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —É—Å–ø–µ—Ö - –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ –æ–¥–µ—Ä–∂–∏–º–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–º –æ–ø—ã—Ç–æ–º.',
                'buffett': '–ù–∞–∫–∞–ø–ª–∏–≤–∞–π—Ç–µ –±–æ–≥–∞—Ç—Å—Ç–≤–æ –º–µ–¥–ª–µ–Ω–Ω–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ. –°–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –≠–π–Ω—à—Ç–µ–π–Ω –Ω–∞–∑—ã–≤–∞–ª –≤–æ—Å—å–º—ã–º —á—É–¥–æ–º —Å–≤–µ—Ç–∞ - –∏ –æ–Ω –±—ã–ª –ø—Ä–∞–≤.'
            }
            return money.get(mentor, money['musk'])

        elif any(word in message_lower for word in ['–µ—Ä—É–Ω–¥–∞', '–≥–ª—É–ø–æ—Å—Ç—å', '—á–µ–ø—É—Ö–∞', '–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ']):
            clarity = {
                'musk': '–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –∫–∞–∂–µ—Ç—Å—è –µ—Ä—É–Ω–¥–æ–π, —Ä–∞–∑–ª–æ–∂–∏—Ç–µ —ç—Ç–æ –ø–æ –ø–µ—Ä–≤—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º. –ß–∞—Å—Ç–æ –∑–∞ "–æ—á–µ–≤–∏–¥–Ω—ã–º–∏" –≤–µ—â–∞–º–∏ —Å–∫—Ä—ã–≤–∞—é—Ç—Å—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏.',
                'gates': '–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –í–∞–∂–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç—ã, –∞ –Ω–µ —ç–º–æ—Ü–∏–∏. –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–º–æ–≥—É—Ç –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é?',
                'bezos': '–ù–µ—è—Å–Ω–æ—Å—Ç—å —á–∞—Å—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ. –ù–∞—á–Ω–∏—Ç–µ —Å –≤–æ–ø—Ä–æ—Å–∞: —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é?',
                'buffett': '–ï—Å–ª–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –∫–∞–∂–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–æ–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è - –Ω–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ. –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏ —è—Å–Ω–æ—Å—Ç—å - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É.'
            }
            return clarity.get(mentor, clarity['musk'])

        elif any(word in message_lower for word in ['–±–∏–∑–Ω–µ—Å', '—Å—Ç–∞—Ä—Ç–∞–ø', '–∫–æ–º–ø–∞–Ω–∏—è']):
            business = {
                'musk': '–í –±–∏–∑–Ω–µ—Å–µ –≥–ª–∞–≤–Ω–æ–µ - —Ä–µ—à–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ª—é–¥–µ–π. –ï—Å–ª–∏ –≤–∞—à –ø—Ä–æ–¥—É–∫—Ç –Ω–µ –¥–µ–ª–∞–µ—Ç –∂–∏–∑–Ω—å –ª—É—á—à–µ, –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é.',
                'gates': '–õ—É—á—à–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –≤–ª–∏—è–Ω–∏—è –Ω–∞ –æ–±—â–µ—Å—Ç–≤–æ.',
                'bezos': '–°—Ç—Ä–æ–∏—Ç–µ –±–∏–∑–Ω–µ—Å –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ. –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –º–æ–≥—É—Ç –æ–±–º–∞–Ω—É—Ç—å, –∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –æ–¥–µ—Ä–∂–∏–º–æ—Å—Ç—å - –Ω–∏–∫–æ–≥–¥–∞.',
                'buffett': '–ò–Ω–≤–µ—Å—Ç–∏—Ä—É—é —Ç–æ–ª—å–∫–æ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ —Å –ø–æ–Ω—è—Ç–Ω–æ–π –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å—é –∏ —Å–∏–ª—å–Ω—ã–º–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–º–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏.'
            }
            return business.get(mentor, business['musk'])

        # –ë–∞–∑–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã
        defaults = {
            'musk': '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º—ã—à–ª–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤: —Ä–∞–∑–ª–æ–∂–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ –±–∞–∑–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –Ω–∞–π–¥–∏—Ç–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥.',
            'gates': '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –Ω—É–∂–µ–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö. –ö–∞–∫–∏–µ —Ñ–∞–∫—Ç—ã –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ?',
            'bezos': '–î—É–º–∞–π—Ç–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ –∏ —Ñ–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ. –ö–∞–∫—É—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å —ç—Ç–æ —Å–æ–∑–¥–∞—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π?',
            'buffett': '–ü–æ–¥—Ö–æ–¥–∏—Ç–µ –∫ –≤–æ–ø—Ä–æ—Å—É —Å —Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º. –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ, —á—Ç–æ –≥–ª—É–±–æ–∫–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ.'
        }

        return defaults.get(mentor, defaults['musk'])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def test_generator():
    generator = SmartAIGenerator()
    
    test_descriptions = [
        "–°–æ–∑–¥–∞–π –∫—Ä–∞—Å–∏–≤—ã–π –ª–µ–Ω–¥–∏–Ω–≥ –¥–ª—è IT-–∫–æ–º–ø–∞–Ω–∏–∏ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º",
        "–°–¥–µ–ª–∞–π –∏–≥—Ä—É –¢–µ—Ç—Ä–∏—Å —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ –∑–≤—É–∫–∞–º–∏",
        "–ù—É–∂–µ–Ω –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –æ–¥–µ–∂–¥—ã",
        "–°–æ–∑–¥–∞–π –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–ª—è –≤–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä–∞ —Å –≥–∞–ª–µ—Ä–µ–µ–π —Ä–∞–±–æ—Ç"
    ]
    
    for desc in test_descriptions:
        print(f"\n{'='*60}")
        print(f"–¢–µ—Å—Ç: {desc}")
        print('='*60)
        
        result = generator.generate_project(desc)
        print(f"–£—Å–ø–µ—Ö: {result.success}")
        print(f"–§–∞–π–ª–æ–≤: {len(result.files)}")
        print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞: {result.structure}")
        print(f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: {result.instructions[:100]}...")

if __name__ == "__main__":
    test_generator()