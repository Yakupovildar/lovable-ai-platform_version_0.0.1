// Lovable AI Platform - Enhanced JavaScript with Backend Integration
console.log('üíª Vibecode AI Platform loaded!');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Replit
const API_BASE_URL = window.location.origin;  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω
const WS_URL = window.location.origin;        // WebSocket –Ω–∞ —Ç–æ–º –∂–µ –¥–æ–º–µ–Ω–µ

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let isTyping = false;
let socket = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
    checkBackendHealth();
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ backend
async function checkBackendHealth() {
    try {
        const response = await fetch(`${API_BASE_URL}/api/health`);
        const data = await response.json();
        console.log('‚úÖ Backend —Å—Ç–∞—Ç—É—Å:', data);
        showNotification('ü§ñ AI —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!', 'success');
    } catch (error) {
        console.warn('‚ö†Ô∏è Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
        showNotification('‚ö†Ô∏è –†–µ–∂–∏–º –æ—Ñ—Ñ–ª–∞–π–Ω - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã', 'info');
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
function initializeApp() {
    setupNavigation();
    setupChatInterface();
    setupAnimations();
    setupScrollEffects();
    setupWebSocket();
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç)
window.startCreating = function() {
    console.log('üöÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    checkAuthAndRedirect();
};

async function checkAuthAndRedirect() {
    try {
        const response = await fetch('/api/user/profile');
        if (response.ok) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
            window.location.href = '/dashboard';
        } else {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
            window.location.href = '/auth';
        }
    } catch (error) {
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        window.location.href = '/auth';
    }
}

window.startFreeTrial = function() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø—Ä–æ–±—É...');

    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    showPreRegistrationForm();
};

// –§–æ—Ä–º–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ —É Lovable
function showPreRegistrationForm() {
    const modal = document.createElement('div');
    modal.className = 'pre-registration-modal';
    modal.innerHTML = `
        <div class="modal-overlay" onclick="closePreRegistrationModal()">
            <div class="modal-content" onclick="event.stopPropagation()">
                <div class="modal-header">
                    <h2>üöÄ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ</h2>
                    <button class="modal-close" onclick="closePreRegistrationModal()">&times;</button>
                    <p style="color: rgba(255, 255, 255, 0.8); margin: 10px 0 0 0;">–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å–æ–∑–¥–∞—Ç—å –ª—É—á—à–∏–π –æ–ø—ã—Ç –¥–ª—è –≤–∞—Å</p>
                </div>
                <div class="modal-body">
                    <form id="preRegistrationForm" class="pre-registration-form">
                        <div class="form-group">
                            <label for="userRole">–ö—Ç–æ –≤—ã? *</label>
                            <select id="userRole" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å</option>
                                <option value="developer">–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫</option>
                                <option value="designer">–î–∏–∑–∞–π–Ω–µ—Ä</option>
                                <option value="entrepreneur">–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å</option>
                                <option value="student">–°—Ç—É–¥–µ–Ω—Ç</option>
                                <option value="freelancer">–§—Ä–∏–ª–∞–Ω—Å–µ—Ä</option>
                                <option value="manager">–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞</option>
                                <option value="other">–î—Ä—É–≥–æ–µ</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="experienceLevel">–£—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ? *</label>
                            <select id="experienceLevel" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å</option>
                                <option value="beginner">–ù–æ–≤–∏—á–æ–∫ (–±–µ–∑ –æ–ø—ã—Ç–∞)</option>
                                <option value="intermediate">–°—Ä–µ–¥–Ω–∏–π (1-3 –≥–æ–¥–∞)</option>
                                <option value="advanced">–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (3+ –ª–µ—Ç)</option>
                                <option value="expert">–≠–∫—Å–ø–µ—Ä—Ç (5+ –ª–µ—Ç)</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="projectType">–ß—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å? *</label>
                            <select id="projectType" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞</option>
                                <option value="landing">–õ–µ–Ω–¥–∏–Ω–≥–∏</option>
                                <option value="ecommerce">–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—ã</option>
                                <option value="webapp">–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</option>
                                <option value="portfolio">–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ</option>
                                <option value="blog">–ë–ª–æ–≥–∏</option>
                                <option value="business">–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–∞–π—Ç—ã</option>
                                <option value="startup">–°—Ç–∞—Ä—Ç–∞–ø MVP</option>
                                <option value="other">–î—Ä—É–≥–æ–µ</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="teamSize">–†–∞–∑–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã? *</label>
                            <select id="teamSize" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä</option>
                                <option value="solo">–†–∞–±–æ—Ç–∞—é –æ–¥–∏–Ω</option>
                                <option value="small">2-5 —á–µ–ª–æ–≤–µ–∫</option>
                                <option value="medium">6-20 —á–µ–ª–æ–≤–µ–∫</option>
                                <option value="large">20+ —á–µ–ª–æ–≤–µ–∫</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="hearAbout">–ö–∞–∫ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å?</label>
                            <select id="hearAbout">
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫</option>
                                <option value="search">–ü–æ–∏—Å–∫ Google</option>
                                <option value="social">–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</option>
                                <option value="youtube">YouTube</option>
                                <option value="friend">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥—Ä—É–≥–∞</option>
                                <option value="blog">–ë–ª–æ–≥/—Å—Ç–∞—Ç—å—è</option>
                                <option value="ads">–†–µ–∫–ª–∞–º–∞</option>
                                <option value="other">–î—Ä—É–≥–æ–µ</option>
                            </select>
                        </div>

                        <button type="submit" class="btn-primary" id="preRegisterBtn">
                            <span>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</span>
                            <div class="btn-glow"></div>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    document.getElementById('preRegistrationForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = {
            userRole: document.getElementById('userRole').value,
            experienceLevel: document.getElementById('experienceLevel').value,
            projectType: document.getElementById('projectType').value,
            teamSize: document.getElementById('teamSize').value,
            hearAbout: document.getElementById('hearAbout').value,
            timestamp: new Date().toISOString()
        };

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        savePreRegistrationData(formData);
        
        // –°—Ä–∞–∑—É –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Ñ–æ—Ä–º—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        modal.remove();
        showRegistrationForm();
    });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
async function savePreRegistrationData(data) {
    try {
        await fetch('/api/pre-registration', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        });
        console.log('üìä –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', data);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
function showRegistrationForm() {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —Ä–æ—Å—Å–∏–π—Å–∫–æ–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–æ–π
    const modal = document.createElement('div');
    modal.className = 'signup-modal';
    modal.innerHTML = `
        <div class="modal-overlay">
            <div class="modal-content">
                <div class="modal-header">
                    <h2>üá∑üá∫ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ Vibecode</h2>
                    <button class="modal-close" onclick="closeModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <!-- –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ -->
                    <div class="registration-benefits">
                        <div class="benefit-highlight">
                            ‚úÖ –ü–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ<br>
                            ‚úÖ –†–æ—Å—Å–∏–π—Å–∫–∏–µ —Å–µ—Ä–≤–µ—Ä—ã<br>
                            ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
                        </div>
                    </div>

                    <form id="signupForm" class="signup-form">
                        <div class="form-group">
                            <label for="email">üìß Email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω</label>
                            <input type="text" id="email" required placeholder="example@mail.ru –∏–ª–∏ +7 (999) 123-45-67">
                            <div class="field-help">–ú—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –ø–æ—á—Ç–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã</div>
                        </div>
                        <div class="form-group">
                            <label for="password">üîí –ü–∞—Ä–æ–ª—å</label>
                            <input type="password" id="password" required placeholder="–ú–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤">
                            <div class="password-strength" id="passwordStrength"></div>
                        </div>
                        <div class="form-group">
                            <label for="name">üë§ –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?</label>
                            <input type="text" id="name" required placeholder="–ò–º—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏">
                        </div>
                        <div class="form-group">
                            <label for="businessType">üè¢ –¢–∏–ø –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</label>
                            <select id="businessType" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</option>
                                <option value="startup">–°—Ç–∞—Ä—Ç–∞–ø / MVP</option>
                                <option value="freelance">–§—Ä–∏–ª–∞–Ω—Å / –í–µ–±-—Å—Ç—É–¥–∏—è</option>
                                <option value="corporate">–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–ª–∏–µ–Ω—Ç</option>
                                <option value="education">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
                                <option value="personal">–õ–∏—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</option>
                            </select>
                        </div>

                        <!-- –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö -->
                        <div class="form-group checkbox-group">
                            <label class="checkbox-label">
                                <input type="checkbox" id="dataProcessing" required>
                                <span class="checkmark"></span>
                                –°–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ <a href="#" onclick="showPrivacyPolicy()">–æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a> —Å–æ–≥–ª–∞—Å–Ω–æ 152-–§–ó
                            </label>
                        </div>

                        <div class="form-group checkbox-group">
                            <label class="checkbox-label">
                                <input type="checkbox" id="marketing">
                                <span class="checkmark"></span>
                                –•–æ—á—É –ø–æ–ª—É—á–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (–Ω–µ —á–∞—â–µ 1 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é)
                            </label>
                        </div>

                        <button type="submit" class="btn-primary" id="submitBtn">
                            <span>üöÄ –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                            <div class="btn-glow"></div>
                        </button>

                        <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–æ–≤–µ—Ä–∏—è -->
                        <div class="trust-indicators">
                            <div class="trust-item">üîí SSL —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ</div>
                            <div class="trust-item">üá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∏–µ —Å–µ—Ä–≤–µ—Ä—ã</div>
                            <div class="trust-item">‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è</div>
                        </div>
                    </form>

                    <div class="modal-footer">
                        <p>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <a href="#" onclick="showLogin()">–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</a></p>
                        <div class="payment-methods">
                            <small>–ü—Ä–∏–Ω–∏–º–∞–µ–º: –ú–∏—Ä, Visa, Mastercard, –°–ë–ü</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const style = document.createElement('style');
    style.textContent = `
                 .signup-modal {
             position: fixed;
             top: 0;
             left: 0;
             width: 100%;
             height: 100%;
             z-index: 10000;
             display: flex;
             align-items: center;
             justify-content: center;
             background: rgba(0, 0, 0, 0.8);
             backdrop-filter: blur(10px);
         }
        .modal-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
        }
        .modal-content {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            border-radius: 20px;
            padding: 30px;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.1);
            position: relative;
            z-index: 10001;
        }
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .modal-header h2 {
            color: white;
            margin: 0;
            font-size: 24px;
        }
        .modal-close {
            background: none;
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: background 0.3s;
        }
        .modal-close:hover {
            background: rgba(255, 255, 255, 0.1);
        }
        .signup-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        .form-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        .form-group label {
            color: white;
            font-weight: 500;
            font-size: 14px;
        }
        .form-group input {
            padding: 12px 16px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.05);
            color: white;
            font-size: 16px;
            transition: all 0.3s;
        }
        .form-group input:focus {
            outline: none;
            border-color: #6366f1;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
        }
        .form-group input::placeholder {
            color: rgba(255, 255, 255, 0.5);
        }
        .modal-footer {
            margin-top: 20px;
            text-align: center;
            color: rgba(255, 255, 255, 0.7);
        }
        .modal-footer a {
            color: #6366f1;
            text-decoration: none;
            font-weight: 500;
        }
        .modal-footer a:hover {
            text-decoration: underline;
        }
    `;

    document.head.appendChild(style);
    document.body.appendChild(modal);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    const passwordInput = document.getElementById('password');
    const strengthIndicator = document.getElementById('passwordStrength');

    passwordInput.addEventListener('input', function() {
        const password = this.value;
        let strength = 0;
        let feedback = [];

        if (password.length >= 8) strength++;
        else feedback.push('–º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤');

        if (/[A-Z]/.test(password)) strength++;
        else feedback.push('–∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞');

        if (/[0-9]/.test(password)) strength++;
        else feedback.push('—Ü–∏—Ñ—Ä–∞');

        if (/[^A-Za-z0-9]/.test(password)) strength++;
        else feedback.push('—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª');

        const colors = ['#ef4444', '#f59e0b', '#eab308', '#22c55e'];
        const texts = ['–°–ª–∞–±—ã–π', '–°—Ä–µ–¥–Ω–∏–π', '–•–æ—Ä–æ—à–∏–π', '–û—Ç–ª–∏—á–Ω—ã–π'];

        strengthIndicator.style.color = colors[strength - 1] || '#ef4444';
        strengthIndicator.textContent = strength > 0 ? `${texts[strength - 1]} –ø–∞—Ä–æ–ª—å` : '';

        if (feedback.length > 0 && password.length > 0) {
            strengthIndicator.textContent += ` (–Ω—É–∂–Ω–æ: ${feedback.join(', ')})`;
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
    document.getElementById('signupForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const submitBtn = document.getElementById('submitBtn');
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        const name = document.getElementById('name').value;
        const businessType = document.getElementById('businessType').value;
        const dataProcessing = document.getElementById('dataProcessing').checked;

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!validateEmail(email) && !validatePhone(email)) {
            showNotification('‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω', 'error');
            return;
        }

        if (password.length < 8) {
            showNotification('‚ùå –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤', 'error');
            return;
        }

        if (!businessType) {
            showNotification('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', 'error');
            return;
        }

        if (!dataProcessing) {
            showNotification('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö', 'error');
            return;
        }

        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.innerHTML = `
            <span>–°–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç...</span>
            <div class="loading-spinner"></div>
        `;
        submitBtn.disabled = true;

        console.log('üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:', { email, name, businessType });

        // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É
        setTimeout(() => {
            showNotification('‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Vibecode! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è', 'success');

            // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏
            trackUserRegistration(businessType, email);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –ë–ï–ó –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            showOnboarding(businessType);
        }, 2000);
    });

    // –§—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    function validateEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    function validatePhone(phone) {
        const phoneRegex = /^\+?7[\s\-]?\(?9\d{2}\)?[\s\-]?\d{3}[\s\-]?\d{2}[\s\-]?\d{2}$/;
        return phoneRegex.test(phone.replace(/[\s\-\(\)]/g, ''));
    }

    function trackUserRegistration(businessType, contact) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
        console.log('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
            segment: businessType,
            contact_type: validateEmail(contact) ? 'email' : 'phone',
            timestamp: new Date().toISOString()
        });
    }
};

window.showDemo = function() {
    console.log('üé¨ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ...');
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –¥–µ–º–æ —Ä–∞–∑–¥–µ–ª—É
    const demoSection = document.getElementById('demo');
    if (demoSection) {
        demoSection.scrollIntoView({ behavior: 'smooth' });

        // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => {
            startDemoAnimation();
        }, 1000);
    }
};

window.closeModal = function() {
    const signupModal = document.querySelector('.signup-modal');
    const loginModal = document.querySelector('.login-modal');
    const preRegModal = document.querySelector('.pre-registration-modal');

    if (signupModal) {
        signupModal.remove();
    }
    if (loginModal) {
        loginModal.remove();
    }
    if (preRegModal) {
        preRegModal.remove();
    }
};

window.closePreRegistrationModal = function() {
    const preRegModal = document.querySelector('.pre-registration-modal');
    if (preRegModal) {
        preRegModal.remove();
    }
};

window.showLogin = function() {
    console.log('üîê –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞...');

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—Ö–æ–¥–∞
    const modal = document.createElement('div');
    modal.className = 'login-modal';
    modal.innerHTML = `
        <div class="modal-overlay">
            <div class="modal-content">
                <div class="modal-header">
                    <h2>–í—Ö–æ–¥</h2>
                    <button class="modal-close" onclick="closeModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="loginForm" class="login-form">
                        <div class="form-group">
                            <label for="loginEmail">Email</label>
                            <input type="email" id="loginEmail" required placeholder="your@email.com">
                        </div>
                        <div class="form-group">
                            <label for="loginPassword">–ü–∞—Ä–æ–ª—å</label>
                            <input type="password" id="loginPassword" required placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å">
                        </div>
                        <button type="submit" class="btn-primary">
                            <span>–í–æ–π—Ç–∏</span>
                            <div class="btn-glow"></div>
                        </button>
                    </form>
                    <div class="modal-footer">
                        <p>–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <a href="#" onclick="showSignup()">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</a></p>
                    </div>
                </div>
            </div>
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—Ö–æ–¥–∞
    const style = document.createElement('style');
    style.textContent = `
        .login-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 10000;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
        }
        .login-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
    `;

    document.head.appendChild(style);
    document.body.appendChild(modal);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    document.getElementById('loginForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const email = document.getElementById('loginEmail').value;
        const password = document.getElementById('loginPassword').value;

        console.log('üîê –í—Ö–æ–¥:', { email });

        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –≤—Ö–æ–¥–∞
        showNotification('‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');

        setTimeout(() => {
            closeModal();
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –¥–∞—à–±–æ—Ä–¥
            window.location.href = '#chat';
        }, 2000);
    });
};

window.showSignup = function() {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    closeModal();
    setTimeout(() => {
        startFreeTrial();
    }, 300);
};

// –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
window.showPrivacyPolicy = function() {
    const modal = document.createElement('div');
    modal.className = 'privacy-modal';
    modal.innerHTML = `
        <div class="modal-overlay">
            <div class="modal-content" style="max-width: 600px; max-height: 80vh; overflow-y: auto;">
                <div class="modal-header">
                    <h2>üîí –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</h2>
                    <button class="modal-close" onclick="closeModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="privacy-content">
                        <h3>–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</h3>
                        <p>–û–û–û "Vibecode" (–¥–∞–ª–µ–µ - –ö–æ–º–ø–∞–Ω–∏—è) –æ–±—è–∑—É–µ—Ç—Å—è –æ–±–µ—Å–ø–µ—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å 152-–§–ó "–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö".</p>

                        <h4>–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º—ã —Å–æ–±–∏—Ä–∞–µ–º:</h4>
                        <ul>
                            <li>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (email, —Ç–µ–ª–µ—Ñ–æ–Ω)</li>
                            <li>–ò–º—è –∏ —Ç–∏–ø –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</li>
                            <li>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞</li>
                        </ul>

                        <h4>–ö–∞–∫ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ:</h4>
                        <ul>
                            <li>–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</li>
                            <li>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</li>
                            <li>–£–ª—É—á—à–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞</li>
                            <li>–ò–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö (—Å –≤–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è)</li>
                        </ul>

                        <h4>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</h4>
                        <p>–î–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö –≤ –†–æ—Å—Å–∏–∏ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è. –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –∏–º–µ—é—Ç —Ç–æ–ª—å–∫–æ —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏.</p>

                        <h4>–í–∞—à–∏ –ø—Ä–∞–≤–∞:</h4>
                        <ul>
                            <li>–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö</li>
                            <li>–í–Ω–µ—Å–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –¥–∞–Ω–Ω—ã–µ</li>
                            <li>–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–∞–≤–æ –Ω–∞ –∑–∞–±–≤–µ–Ω–∏–µ)</li>
                            <li>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏</li>
                        </ul>

                        <p><strong>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</strong> privacy@vibecode.ru, +7 (495) 123-45-67</p>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.appendChild(modal);
};

// –û–Ω–±–æ—Ä–¥–∏–Ω–≥ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
window.showOnboarding = function(businessType) {
    const onboardingData = {
        'startup': {
            title: 'üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä!',
            description: '–°–æ–∑–¥–∞–¥–∏–º –≤–∞—à MVP –∑–∞ 15 –º–∏–Ω—É—Ç',
            suggestions: [
                '–°–æ–∑–¥–∞—Ç—å –ª–µ–Ω–¥–∏–Ω–≥ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞',
                '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å –æ–ø–ª–∞—Ç–æ–π',
                '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–±–æ—Ä–∞ –∑–∞—è–≤–æ–∫',
                'CRM –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏'
            ]
        },
        'freelance': {
            title: 'üíº –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–∞!',
            description: '–£—Å–∫–æ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –≤ 10 —Ä–∞–∑',
            suggestions: [
                '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –≤–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä–∞',
                '–°–∞–π—Ç –¥–ª—è digital-–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞',
                '–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏',
                '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥'
            ]
        },
        'corporate': {
            title: 'üè¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Vibecode Business!',
            description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ',
            suggestions: [
                '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç',
                '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Ä—Ç–∞–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
                '–°–∏—Å—Ç–µ–º–∞ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏',
                '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –ª–µ–Ω–¥–∏–Ω–≥–∏'
            ]
        }
    };

    const data = onboardingData[businessType] || onboardingData['startup'];

    const modal = document.createElement('div');
    modal.className = 'onboarding-modal';
    modal.innerHTML = `
        <div class="modal-overlay">
            <div class="modal-content" style="max-width: 700px;">
                <div class="modal-header">
                    <h2>${data.title}</h2>
                </div>
                <div class="modal-body">
                    <p style="font-size: 1.2rem; text-align: center; margin-bottom: 2rem;">${data.description}</p>

                    <h3>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ –≤–∞—à–µ–π —Å—Ñ–µ—Ä–µ:</h3>
                    <div class="suggestions-grid">
                        ${data.suggestions.map(suggestion => `
                            <div class="suggestion-card" onclick="startProjectCreation('${suggestion}')">
                                <h4>${suggestion}</h4>
                                <p>–°–æ–∑–¥–∞—Ç—å –∑–∞ 5-10 –º–∏–Ω—É—Ç</p>
                                <div class="card-action">–ù–∞—á–∞—Ç—å ‚Üí</div>
                            </div>
                        `).join('')}
                    </div>

                    <div style="text-align: center; margin-top: 2rem;">
                        <button class="btn-secondary" onclick="closeModal()">
                            –°–ø–∞—Å–∏–±–æ, —Ä–∞–∑–±–µ—Ä—É—Å—å —Å–∞–º
                        </button>
                        <button class="btn-primary" onclick="goToChat()" style="margin-left: 1rem;">
                            –•–æ—á—É —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ —Å–≤–æ–µ
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.appendChild(modal);
};

// –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
window.startProjectCreation = function(projectType) {
    closeModal();
    const chatInput = document.getElementById('chatInput');
    if (chatInput) {
        chatInput.value = `–°–æ–∑–¥–∞–π ${projectType.toLowerCase()}`;
        document.getElementById('chat').scrollIntoView({ behavior: 'smooth' });
        setTimeout(() => {
            sendMessage();
        }, 1000);
    }
};

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —á–∞—Ç—É
window.goToChat = function() {
    closeModal();
    document.getElementById('chat').scrollIntoView({ behavior: 'smooth' });
    const chatInput = document.getElementById('chatInput');
    if (chatInput) {
        chatInput.focus();
        chatInput.placeholder = "–û–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç –ø–æ–¥—Ä–æ–±–Ω–æ: –∫–∞–∫–æ–π —Å–∞–π—Ç –Ω—É–∂–µ–Ω, –¥–ª—è —á–µ–≥–æ, –∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏...";
    }
};

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebSocket
window.initializeWebSocket = function() {
    try {
        console.log('üîÑ –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ WebSocket...', window.location.origin);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Socket.IO –∑–∞–≥—Ä—É–∂–µ–Ω
        if (typeof io === 'undefined') {
            console.log('‚ö†Ô∏è Socket.IO –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º WebSocket');
            return;
        }

        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É
        socket = io(API_BASE_URL, {
            transports: ['polling', 'websocket'],
            timeout: 5000,
            forceNew: true
        });

        socket.on('connect', function() {
            console.log('üîå WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω!');
        });

        socket.on('disconnect', function() {
            console.log('‚ùå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω!');
        });

        socket.on('connect_error', function(error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket:', error);
            showConnectionStatus('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', 'error');
            socket = null;
        });

        socket.on('project_status', function(data) {
            console.log('üì¶ –ü–æ–ª—É—á–µ–Ω —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:', data);
            handleProjectStatus(data);
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket:', error);
        showConnectionStatus('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', 'error');
        socket = null;
    }
};

// –§—É–Ω–∫—Ü–∏—è showConnectionStatus —É–¥–∞–ª–µ–Ω–∞ - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –±–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞
function handleProjectStatus(data) {
    const { status, message, project_id, download_url } = data;

    if (status === 'completed') {
        showNotification('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');
        showDownloadButton(download_url, project_id);
    } else if (status === 'error') {
        showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞', 'error');
    } else if (status === 'generating') {
        showNotification('üîÑ –°–æ–∑–¥–∞—é –ø—Ä–æ–µ–∫—Ç...', 'info');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
function showDownloadButton(downloadUrl, projectId) {
    const downloadDiv = document.createElement('div');
    downloadDiv.className = 'download-notification';
    downloadDiv.innerHTML = `
        <div style="
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: linear-gradient(45deg, #8b5cf6, #06b6d4);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 15px;
            box-shadow: 0 10px 25px rgba(139, 92, 246, 0.3);
            z-index: 10000;
            animation: slideInUp 0.3s ease;
        ">
            <h4 style="margin: 0 0 0.5rem 0;">üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤!</h4>
            <p style="margin: 0 0 1rem 0; opacity: 0.9;">–í–∞—à –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ</p>
            <button onclick="downloadProject('${downloadUrl}')" style="
                background: rgba(255, 255, 255, 0.2);
                border: 1px solid rgba(255, 255, 255, 0.3);
                color: white;
                padding: 0.5rem 1rem;
                border-radius: 8px;
                cursor: pointer;
                font-weight: 600;
                transition: all 0.3s ease;
            ">üì• –°–∫–∞—á–∞—Ç—å</button>
        </div>
    `;

    document.body.appendChild(downloadDiv);

    // –£–±–∏—Ä–∞–µ–º –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º —Ä–µ—à–∏—Ç –∫–æ–≥–¥–∞ –∑–∞–∫—Ä—ã—Ç—å
}

// –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
function downloadProject(downloadUrl) {
    window.open(downloadUrl, '_blank');
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å AI
function showAIStatus() {
    fetch(`${API_BASE_URL}/api/ai/status`)
        .then(response => response.json())
        .then(data => {
            const status = data.available_services.map(service => 
                `${service.name}: ${service.configured ? '‚úÖ' : '‚ùå'}`
            ).join('\n');

            alert(`ü§ñ –°—Ç–∞—Ç—É—Å AI —Å–µ—Ä–≤–∏—Å–æ–≤:\n\n${status}`);
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ AI:', error);
            alert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å AI —Å–µ—Ä–≤–∏—Å–æ–≤');
        });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function setupNavigation() {
    const hamburger = document.querySelector('.hamburger');
    const navMenu = document.querySelector('.nav-menu');

    if (hamburger && navMenu) {
        hamburger.addEventListener('click', () => {
            navMenu.classList.toggle('active');
            hamburger.classList.toggle('active');
        });
    }

    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è —Å—Å—ã–ª–æ–∫
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Ç–∞
function setupChatInterface() {
    const chatInput = document.getElementById('chatInput');
    const sendButton = document.getElementById('sendMessage');

    if (chatInput && sendButton) {
        sendButton.addEventListener('click', sendMessage);
        chatInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });
    }
}

// –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
async function sendMessage() {
    const chatInput = document.getElementById('chatInput');
    const message = chatInput.value.trim();

    if (!message) return;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    addMessage(message, 'user');
    chatInput.value = '';

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    showTypingIndicator();

    try {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º session_id
        let sessionId = localStorage.getItem('ai_session_id');
        if (!sessionId) {
            sessionId = 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
            localStorage.setItem('ai_session_id', sessionId);
        }

        console.log('–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫:', `${API_BASE_URL}/api/chat`);

        const response = await fetch(`${API_BASE_URL}/api/chat`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
                message: message,
                session_id: sessionId
            })
        });

        console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);

        if (!response.ok) {
            if (response.status === 401) {
                // –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
                const errorData = await response.json().catch(() => ({}));
                addMessage('üîê –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI-—á–∞—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.', 'ai');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                const authButton = document.createElement('button');
                authButton.className = 'auth-redirect-btn';
                authButton.textContent = 'üöÄ –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É';
                authButton.onclick = () => window.location.href = '/auth.html';
                
                const messagesContainer = document.querySelector('.chat-messages');
                if (messagesContainer) {
                    messagesContainer.appendChild(authButton);
                }
                
                return;
            }
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', data);

        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        hideTypingIndicator();

        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç AI
        if (data.message) {
            addMessage(data.message, 'ai', data);
        } else {
            addMessage('ü§ñ –ü—Ä–∏–≤–µ—Ç! –û—Ç–ª–∏—á–Ω–æ, —á—Ç–æ –≤—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫–æ –º–Ω–µ! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –ª—é–±–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', 'ai');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
        if (data.suggestions && data.suggestions.length > 0) {
            showSuggestions(data.suggestions);
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        hideTypingIndicator();

        // –ë–æ–ª–µ–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        if (error.name === 'TypeError' && error.message.includes('fetch')) {
            addMessage('üîå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.', 'ai');
        } else if (error.message.includes('500')) {
            addMessage('ü§ñ –£ –º–µ–Ω—è –Ω–µ–±–æ–ª—å—à–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç–∫—É!', 'ai');
        } else {
            // –î–∞–µ–º –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            if (message.toLowerCase().includes('–ø—Ä–∏–≤–µ—Ç') || message.toLowerCase().includes('–∫–∞–∫ –¥–µ–ª–∞')) {
                addMessage('ü§ñ –ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ! –•–æ—Ç—è —É –º–µ–Ω—è –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É, –Ω–æ —è –≤—Å–µ —Ä–∞–≤–Ω–æ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º. –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å?', 'ai');
            } else {
                addMessage('ü§ñ –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ —è –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å! –ú–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –∏–¥–µ–∏. –ß—Ç–æ —Å–∫–∞–∂–µ—Ç–µ?', 'ai');
            }
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        showSuggestions([
            '–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É',
            '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å TODO-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', 
            '–°–¥–µ–ª–∞—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä',
            '–ü–æ–º–æ—á—å —Å –∏–¥–µ–µ–π'
        ]);
    }
}

// –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
function addMessage(text, sender, data = null) {
    const chatMessages = document.getElementById('chatMessages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${sender}-message`;

    const avatar = sender === 'ai' ? 'ü§ñ' : 'üë§';
    const avatarClass = sender === 'ai' ? 'ai-avatar' : 'user-avatar';

    let messageContent = `<p>${text}</p>`;

    // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    if (data && data.type === 'project_created' && data.download_url) {
        messageContent += `
            <div class="project-actions">
                <button class="download-btn" onclick="downloadProject('${data.download_url}', '${data.project_id}')">
                    üì¶ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                </button>
                <button class="view-btn" onclick="viewProject('${data.project_id}')">
                    üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä
                </button>
            </div>
        `;
    }

    messageDiv.innerHTML = `
        <div class="message-avatar ${avatarClass}">${avatar}</div>
        <div class="message-content">
            ${messageContent}
        </div>
    `;

    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
function showTypingIndicator() {
    const chatMessages = document.getElementById('chatMessages');
    const typingDiv = document.createElement('div');
    typingDiv.className = 'message ai-message typing-indicator';
    typingDiv.id = 'typingIndicator';

    typingDiv.innerHTML = `
        <div class="message-avatar">ü§ñ</div>
        <div class="message-content">
            <div class="typing-dots">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </div>
    `;

    chatMessages.appendChild(typingDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
function hideTypingIndicator() {
    const typingIndicator = document.getElementById('typingIndicator');
    if (typingIndicator) {
        typingIndicator.remove();
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏
window.downloadProject = function(downloadUrl, projectId) {
    console.log('üì¶ –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç:', projectId);

    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    const link = document.createElement('a');
    link.href = downloadUrl;
    link.download = `project_${projectId}.zip`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);

    showNotification('üì¶ –ü—Ä–æ–µ–∫—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...', 'info');
};

window.viewProject = function(projectId) {
    console.log('üëÅÔ∏è –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç:', projectId);
    showNotification('üëÅÔ∏è –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ', 'info');
};

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
function showSuggestions(suggestions) {
    const chatMessages = document.getElementById('chatMessages');
    const suggestionsDiv = document.createElement('div');
    suggestionsDiv.className = 'suggestions';

    const buttons = suggestions.map(suggestion => 
        `<button onclick="sendSuggestion('${suggestion}')" class="suggestion-btn">${suggestion}</button>`
    ).join('');

    suggestionsDiv.innerHTML = `
        <div class="suggestions-container">
            ${buttons}
        </div>
    `;

    chatMessages.appendChild(suggestionsDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
function sendSuggestion(suggestion) {
    const chatInput = document.getElementById('chatInput');
    chatInput.value = suggestion;
    sendMessage();

    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    const suggestions = document.querySelector('.suggestions');
    if (suggestions) {
        suggestions.remove();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem 1.5rem;
        border-radius: 10px;
        color: white;
        font-weight: 600;
        z-index: 10000;
        animation: slideInRight 0.3s ease;
        ${type === 'success' ? 'background: #10b981;' : 
          type === 'error' ? 'background: #ef4444;' : 
          'background: #3b82f6;'}
    `;

    document.body.appendChild(notification);

    setTimeout(() => {
        notification.style.animation = 'slideOutRight 0.3s ease';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π
function setupAnimations() {
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.animation = 'fadeInUp 0.6s ease forwards';
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏–π
    document.querySelectorAll('.feature-card').forEach(card => {
        observer.observe(card);
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —Å–∫—Ä–æ–ª–ª–∞
function setupScrollEffects() {
    window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const parallax = document.querySelector('.hero-background');

        if (parallax) {
            const speed = scrolled * 0.5;
            parallax.style.transform = `translateY(${speed}px)`;
        }
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebSocket
function setupWebSocket() {
    // WebSocket –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
    console.log('üì° WebSocket –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏');
}

// CSS –∞–Ω–∏–º–∞—Ü–∏–∏
const style = document.createElement('style');
style.textContent = `
    @keyframes slideInRight {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }

    @keyframes slideOutRight {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }

    @keyframes slideInUp {
        from { transform: translateY(30px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }

    @keyframes slideOutDown {
        from { transform: translateY(0); opacity: 1; }
        to { transform: translateY(30px); opacity: 0; }
    }

    @keyframes fadeInUp {
        from { transform: translateY(30px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }

    .typing-dots {
        display: flex;
        gap: 4px;
    }

    .typing-dots span {
        width: 8px;
        height: 8px;
        background: rgba(255, 255, 255, 0.7);
        border-radius: 50%;
        animation: typingDot 1.4s ease-in-out infinite;
    }

    .typing-dots span:nth-child(2) {
        animation-delay: 0.2s;
    }

    .typing-dots span:nth-child(3) {
        animation-delay: 0.4s;
    }

    @keyframes typingDot {
        0%, 60%, 100% { transform: scale(1); opacity: 0.7; }
        30% { transform: scale(1.2); opacity: 1; }
    }

    .suggestions-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 1rem;
    }

    .suggestion-btn {
        background: rgba(139, 92, 246, 0.2);
        border: 1px solid rgba(139, 92, 246, 0.3);
        color: #8b5cf6;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        cursor: pointer;
        font-size: 0.9rem;
        transition: all 0.3s ease;
    }

    .suggestion-btn:hover {
        background: rgba(139, 92, 246, 0.3);
        transform: translateY(-1px);
    }

    .user-avatar {
        background: linear-gradient(45deg, #10b981, #06b6d4) !important;
    }
`;

document.head.appendChild(style);

// –î–µ–º–æ –∞–Ω–∏–º–∞—Ü–∏—è
let demoAnimationRunning = false;
let demoAnimationTimeout = null;

function startDemoAnimation() {
    if (demoAnimationRunning) return;

    demoAnimationRunning = true;
    console.log('üé¨ –ó–∞–ø—É—Å–∫–∞—é –¥–µ–º–æ –∞–Ω–∏–º–∞—Ü–∏—é...');

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —à–∞–≥–∏
    const steps = document.querySelectorAll('.demo-step');
    steps.forEach(step => step.classList.remove('active'));

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–ª–∞–π–Ω
    const timelineItems = document.querySelectorAll('.timeline-item');
    timelineItems.forEach(item => item.classList.remove('active'));

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ —à–∞–≥–∞–º
    setTimeout(() => activateStep(1), 500);
    setTimeout(() => activateStep(2), 3000);
    setTimeout(() => activateStep(3), 6000);
    setTimeout(() => showSuccess(), 9000);
    setTimeout(() => showEmotions(), 10000);
    setTimeout(() => activateTimelineItem(0), 500);
    setTimeout(() => activateTimelineItem(1), 3000);
    setTimeout(() => activateTimelineItem(2), 6000);
    setTimeout(() => activateTimelineItem(3), 9000);
    setTimeout(() => activateTimelineItem(4), 12000);

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
    demoAnimationTimeout = setTimeout(() => {
        demoAnimationRunning = false;
    }, 15000);
}

function activateStep(stepNumber) {
    const step = document.querySelector(`[data-step="${stepNumber}"]`);
    if (step) {
        step.classList.add('active');

        // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
        if (stepNumber === 1) {
            typeInInput();
        } else if (stepNumber === 2) {
            showThinking();
        } else if (stepNumber === 3) {
            showCodeGeneration();
        }
    }
}

function activateTimelineItem(index) {
    const timelineItems = document.querySelectorAll('.timeline-item');
    timelineItems.forEach(item => item.classList.remove('active'));

    if (timelineItems[index]) {
        timelineItems[index].classList.add('active');
    }
}

function typeInInput() {
    const inputSimulation = document.querySelector('.input-simulation');
    const text = '–°–æ–∑–¥–∞–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å –∫–æ—Ä–∑–∏–Ω–æ–π';

    if (!inputSimulation) return;

    let i = 0;
    inputSimulation.innerHTML = '<span class="typing-cursor">|</span>';

    const typeInterval = setInterval(() => {
        if (i < text.length) {
            inputSimulation.innerHTML = text.substring(0, i + 1) + '<span class="typing-cursor">|</span>';
            i++;
        } else {
            clearInterval(typeInterval);
        }
    }, 100);
}

function showThinking() {
    const thinkingText = document.querySelector('.ai-thinking p');
    const texts = [
        '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è...',
        '–ü–ª–∞–Ω–∏—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...',
        '–ü–æ–¥–±–∏—Ä–∞—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏...',
        '–ì–æ—Ç–æ–≤–ª—é —à–∞–±–ª–æ–Ω—ã...'
    ];

    if (!thinkingText) return;

    let currentIndex = 0;
    const thinkingInterval = setInterval(() => {
        if (currentIndex < texts.length) {
            thinkingText.textContent = texts[currentIndex];
            currentIndex++;
        } else {
            clearInterval(thinkingInterval);
        }
    }, 700);
}

function showCodeGeneration() {
    const codeLines = document.querySelectorAll('.code-line');
    codeLines.forEach((line, index) => {
        setTimeout(() => {
            line.style.opacity = '1';
            line.style.transform = 'translateX(0)';
        }, index * 800);
    });
}

function showSuccess() {
    const appContent = document.querySelector('.app-content');
    if (appContent) {
        appContent.innerHTML = `
            <div class="success-animation">
                <div class="check-mark">‚úì</div>
            </div>
            <p>–ì–æ—Ç–æ–≤–æ!</p>
        `;
    }
}

function showEmotions() {
    const emotionFace = document.querySelector('.emotion-face');
    const emotionText = document.querySelector('.emotion-text p');

    if (!emotionFace || !emotionText) return;

    const emotions = [
        { face: 'üòä', text: '"–í–∞—É! –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!"' },
        { face: 'ü§©', text: '"–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –±—ã—Å—Ç—Ä–æ!"' },
        { face: 'üí∞', text: '"–£–∂–µ –ø–æ–ª—É—á–∏–ª –∑–∞–∫–∞–∑—ã!"' },
        { face: 'üéâ', text: '"–ë–∏–∑–Ω–µ—Å –ø—Ä–æ—Ü–≤–µ—Ç–∞–µ—Ç!"' }
    ];

    let currentEmotion = 0;
    const emotionInterval = setInterval(() => {
        if (currentEmotion < emotions.length) {
            emotionFace.textContent = emotions[currentEmotion].face;
            emotionText.textContent = emotions[currentEmotion].text;
            currentEmotion++;
        } else {
            clearInterval(emotionInterval);
        }
    }, 2000);
}

// –§—É–Ω–∫—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –¥–µ–º–æ –≤–∏–¥–µ–æ
window.playDemoVideo = function() {
    console.log('üé• –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –¥–µ–º–æ –≤–∏–¥–µ–æ...');

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
    const videoModal = document.createElement('div');
    videoModal.className = 'video-demo-modal';
    videoModal.innerHTML = `
        <div class="video-modal-overlay" onclick="closeDemoVideo()">
            <div class="modal-content" onclick="event.stopPropagation()">
                <div class="video-modal-header">
                    <h3>üé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Vibecode AI</h3>
                    <button onclick="closeDemoVideo()" class="modal-close">&times;</button>
                </div>
                <div class="video-demo-container">
                    <div class="demo-progress">
                        <div class="progress-bar" id="demoProgress"></div>
                    </div>
                    <div class="demo-stages">
                        <div class="demo-stage active" id="stage1">
                            <h4>üí° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∏–¥–µ—é</h4>
                            <p>"–•–æ—á—É —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã"</p>
                            <div class="stage-visual">
                                <div class="typing-demo">–°–æ–∑–¥–∞–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω...</div>
                            </div>
                        </div>
                        <div class="demo-stage" id="stage2">
                            <h4>ü§ñ –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å</h4>
                            <p>Vibecode AI –ø–æ–Ω–∏–º–∞–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É</p>
                            <div class="stage-visual">
                                <div class="ai-analysis">
                                    <div class="analysis-item">‚úì –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ë–î</div>
                                    <div class="analysis-item">‚úì –í—ã–±—Ä–∞–Ω—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</div>
                                    <div class="analysis-item">‚úì –°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω UI/UX</div>
                                </div>
                            </div>
                        </div>
                        <div class="demo-stage" id="stage3">
                            <h4>‚ö° –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞</h4>
                            <p>–ò–ò —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</p>
                            <div class="stage-visual">
                                <div class="code-progress">
                                    <div class="progress-item">Frontend (React) - 100%</div>
                                    <div class="progress-item">Backend (Node.js) - 100%</div>
                                    <div class="progress-item">–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - 100%</div>
                                    <div class="progress-item">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ - 100%</div>
                                </div>
                            </div>
                        </div>
                        <div class="demo-stage" id="stage4">
                            <h4>üéâ –ì–æ—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç</h4>
                            <p>–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É</p>
                            <div class="stage-visual">
                                <div class="product-showcase">
                                    <div class="feature">‚úÖ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤</div>
                                    <div class="feature">‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫</div>
                                    <div class="feature">‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã</div>
                                    <div class="feature">‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</div>
                                </div>
                            </div>
                        </div>
                        <div class="demo-stage" id="stage5">
                            <h4>üí∞ –£—Å–ø–µ—Ö –≤ –±–∏–∑–Ω–µ—Å–µ</h4>
                            <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä–≤—ã–µ –∑–∞–∫–∞–∑—ã –∏ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç –±–∏–∑–Ω–µ—Å</p>
                            <div class="stage-visual">
                                <div class="success-metrics">
                                    <div class="metric">üìà +300% –ø—Ä–æ–¥–∞–∂</div>
                                    <div class="metric">üë• 1000+ –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
                                    <div class="metric">üí∞ $50K+ –¥–æ—Ö–æ–¥</div>
                                    <div class="metric">‚≠ê 4.9/5 —Ä–µ–π—Ç–∏–Ω–≥</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="video-controls">
                        <button onclick="restartDemo()" class="control-btn">üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
                        <button onclick="closeDemoVideo()" class="control-btn primary">‚ú® –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å</button>
                    </div>
                </div>
            </div>
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≤–∏–¥–µ–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const videoStyle = document.createElement('style');
    videoStyle.textContent = `
        .video-demo-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 10000;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(0, 0, 0, 0.95);
            backdrop-filter: blur(10px);
        }

        .video-modal-content {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            border-radius: 20px;
            padding: 2rem;
            max-width: 900px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .video-modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding-bottom: 1rem;
        }

        .video-modal-header h3 {
            color: white;
            margin: 0;
            font-size: 1.5rem;
        }

        .demo-progress {
            width: 100%;
            height: 4px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 2px;
            margin-bottom: 2rem;
            overflow: hidden;
        }

        .progress-bar {
            height: 100%;
            background: linear-gradient(45deg, #8b5cf6, #06b6d4);
            width: 0%;
            transition: width 0.5s ease;
            border-radius: 2px;
        }

        .demo-stage {
            display: none;
            text-align: center;
            padding: 2rem;
            animation: stageAppear 0.5s ease;
        }

        .demo-stage.active {
            display: block;
        }

        @keyframes stageAppear {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .demo-stage h4 {
            color: white;
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .demo-stage p {
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 2rem;
            font-size: 1.1rem;
        }

        .stage-visual {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            padding: 2rem;
            margin: 2rem 0;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .typing-demo {
            font-family: 'Courier New', monospace;
            font-size: 1.2rem;
            color: #10b981;
            animation: typewriter 2s steps(30) infinite;
        }

        .analysis-item, .progress-item, .feature, .metric {
            background: rgba(139, 92, 246, 0.2);
            border: 1px solid rgba(139, 92, 246, 0.3);
            border-radius: 10px;
            padding: 1rem;
            margin: 0.5rem 0;
            color: white;
            animation: itemAppear 0.5s ease;
        }

        @keyframes itemAppear {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
        }

        .video-controls {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
        }

        .control-btn {
            padding: 1rem 2rem;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 25px;
            background: rgba(255, 255, 255, 0.05);
            color: white;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .control-btn.primary {
            background: linear-gradient(45deg, #8b5cf6, #06b6d4);
            border-color: transparent;
        }

        .control-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(139, 92, 246, 0.3);
        }
    `;

    document.head.appendChild(videoStyle);
    document.body.appendChild(videoModal);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
    startVideoDemo();
};

function startVideoDemo() {
    let currentStage = 1;
    const totalStages = 5;
    const progressBar = document.getElementById('demoProgress');

    const stageInterval = setInterval(() => {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        const progress = (currentStage / totalStages) * 100;
        if (progressBar) {
            progressBar.style.width = progress + '%';
        }

        // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç—Ç–∞–ø
        const prevStage = document.getElementById(`stage${currentStage - 1}`);
        if (prevStage) {
            prevStage.classList.remove('active');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø
        const currentStageElement = document.getElementById(`stage${currentStage}`);
        if (currentStageElement) {
            currentStageElement.classList.add('active');
        }

        currentStage++;

        if (currentStage > totalStages) {
            clearInterval(stageInterval);
        }
    }, 3000);
}

window.closeDemoVideo = function() {
    const videoModal = document.querySelector('.video-demo-modal');
    if (videoModal) {
        videoModal.remove();
    }
};

window.restartDemo = function() {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã
    document.querySelectorAll('.demo-stage').forEach(stage => {
        stage.classList.remove('active');
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø
    const firstStage = document.getElementById('stage1');
    if (firstStage) {
        firstStage.classList.add('active');
    }

    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
    startVideoDemo();
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –¥–µ–º–æ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function setupDemoScrollTrigger() {
    const demoSection = document.getElementById('demo');
    if (!demoSection) return;

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting && !demoAnimationRunning) {
                setTimeout(() => {
                    startDemoAnimation();
                }, 500);
            }
        });
    }, { threshold: 0.3 });

    observer.observe(demoSection);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ–º–æ —Ç—Ä–∏–≥–≥–µ—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupDemoScrollTrigger);
} else {
    setupDemoScrollTrigger();
}