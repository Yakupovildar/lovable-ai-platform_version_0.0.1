#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç AI —á–∞—Ç–∞ –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sys
import os
sys.path.append('backend')

from backend.intelligent_chat import IntelligentChat

def test_basic_chat_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å AI —á–∞—Ç–∞"""
    
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AI –ß–ê–¢–ê LOVABLE PLATFORM")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Ç
    chat = IntelligentChat()
    session_id = chat.create_session("test_user_2024")
    
    print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {session_id}")
    print(f"üìä –ù–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(chat.get_session(session_id).messages)}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∏–∞–ª–æ–≥–∏
    test_scenarios = [
        {
            "name": "–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
            "messages": [
                "–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É —Å–æ–∑–¥–∞—Ç—å –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ AI –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞",
                "–≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å iOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –≥–æ–ª–æ—Å–æ–≤—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º",
                "–î–æ–±–∞–≤—å 3D –∞–≤–∞—Ç–∞—Ä –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å OpenAI"
            ]
        },
        {
            "name": "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
            "messages": [
                "–°–æ–∑–¥–∞–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞",
                "–°–¥–µ–ª–∞–π –µ–≥–æ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏",
                "–î–æ–±–∞–≤—å —Ñ–æ—Ä–º—É –∑–∞—è–≤–∫–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å CRM"
            ]
        },
        {
            "name": "–û—Ç–ª–∞–¥–∫–∞ –∫–æ–¥–∞",
            "messages": [
                "–£ –º–µ–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç JavaScript –∫–æ–¥",
                "–ö–æ–Ω—Å–æ–ª—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É 'undefined is not a function'",
                "–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É?"
            ]
        }
    ]
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç—ã –ø–æ scenarios
    for scenario in test_scenarios:
        print(f"\nüéØ –°–¶–ï–ù–ê–†–ò–ô: {scenario['name']}")
        print("-" * 30)
        
        scenario_session = chat.create_session(f"scenario_{scenario['name'].replace(' ', '_')}")
        
        for i, message in enumerate(scenario['messages'], 1):
            print(f"\nüë§ –°–æ–æ–±—â–µ–Ω–∏–µ {i}: {message}")
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
            result = chat.chat(scenario_session, message)
            
            print(f"ü§ñ AI –æ—Ç–≤–µ—Ç: {result['response'][:100]}...")
            print(f"üìà –ù–∞–º–µ—Ä–µ–Ω–∏–µ: {result['intent_analysis']['intent']}")
            print(f"‚öôÔ∏è –°–ª–æ–∂–Ω–æ—Å—Ç—å: {result['intent_analysis']['complexity']}")
            print(f"üì± –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞: {result['intent_analysis']['project_type']}")
            
            if result['intent_analysis']['technologies']:
                print(f"üíª –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: {result['intent_analysis']['technologies']}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è
        suggestions = chat.get_suggestions(scenario_session)
        print(f"\nüí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã:")
        for j, suggestion in enumerate(suggestions[:3], 1):
            print(f"   {j}. {suggestion}")

def test_intent_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    print(f"\n\nüß† –¢–ï–°–¢ –ê–ù–ê–õ–ò–ó–ê –ù–ê–ú–ï–†–ï–ù–ò–ô")
    print("=" * 40)
    
    chat = IntelligentChat()
    
    test_messages = [
        "–°–æ–∑–¥–∞–π –∏–≥—Ä—É –¢–µ—Ç—Ä–∏—Å –Ω–∞ JavaScript",
        "–ü–æ–º–æ–≥–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –≤ React –∫–æ–¥–µ",
        "–û–±—ä—è—Å–Ω–∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç CSS Grid –∏ Flexbox",
        "–ü–æ—Å–æ–≤–µ—Ç—É–π –ª—É—á—à–∏–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
        "–°–¥–µ–ª–∞–π –∫—Ä–∞—Å–∏–≤—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞",
        "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–æ–µ–≥–æ —Å–∞–π—Ç–∞"
    ]
    
    for i, message in enumerate(test_messages, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {message}")
        
        analysis = chat.analyze_user_intent(message)
        
        print(f"   üéØ –ù–∞–º–µ—Ä–µ–Ω–∏–µ: {analysis['intent']}")
        print(f"   üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {analysis['confidence']}")
        print(f"   üíª –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: {analysis['technologies']}")
        print(f"   ‚ö° –°–ª–æ–∂–Ω–æ—Å—Ç—å: {analysis['complexity']}")
        print(f"   üì± –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞: {analysis['project_type']}")

def test_session_management():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏"""
    
    print(f"\n\nüí¨ –¢–ï–°–¢ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–ï–°–°–ò–Ø–ú–ò")
    print("=" * 40)
    
    chat = IntelligentChat()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Å—Å–∏–π
    sessions = []
    for i in range(3):
        session_id = chat.create_session(f"user_{i}")
        sessions.append(session_id)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Å—Å–∏—è {i+1}: {session_id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    test_data = [
        ("–°–æ–∑–¥–∞–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "create_project"),
        ("–ò—Å–ø—Ä–∞–≤—å —ç—Ç–æ—Ç –∫–æ–¥", "improve_code"),
        ("–ß—Ç–æ —Ç–∞–∫–æ–µ React hooks?", "explain_concept")
    ]
    
    for i, (message, expected_intent) in enumerate(test_data):
        session_id = sessions[i]
        result = chat.chat(session_id, message)
        
        session = chat.get_session(session_id)
        print(f"\nüìä –°–µ—Å—Å–∏—è {i+1} –ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
        print(f"   üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(session.messages)}")
        print(f"   üéØ –ù–∞–º–µ—Ä–µ–Ω–∏–µ: {result['intent_analysis']['intent']}")
        print(f"   ‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {session.last_activity}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–µ—Å—Å–∏–∏
        context = session.context
        print(f"   üìã –ö–æ–Ω—Ç–µ–∫—Å—Ç: {list(context.keys())}")

def test_fallback_responses():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∫–æ–≥–¥–∞ AI API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"""
    
    print(f"\n\nüîÑ –¢–ï–°–¢ –†–ï–ó–ï–†–í–ù–´–• –û–¢–í–ï–¢–û–í")
    print("=" * 40)
    
    chat = IntelligentChat()
    
    # –û—á–∏—â–∞–µ–º API –∫–ª—é—á–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è fallback
    original_openai = chat.openai_api_key  
    original_claude = chat.claude_api_key
    chat.openai_api_key = None
    chat.claude_api_key = None
    
    session_id = chat.create_session("fallback_test")
    
    fallback_tests = [
        "–°–æ–∑–¥–∞–π –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å AI —á–∞—Ç–æ–º",
        "–ü–æ–º–æ–≥–∏ —Å –æ—Ç–ª–∞–¥–∫–æ–π JavaScript –∫–æ–¥–∞",
        "–û–±—ä—è—Å–Ω–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è",
        "–ü–æ—Å–æ–≤–µ—Ç—É–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è –≤–µ–±-–ø—Ä–æ–µ–∫—Ç–∞"
    ]
    
    for i, message in enumerate(fallback_tests, 1):
        print(f"\nüîÑ Fallback —Ç–µ—Å—Ç {i}: {message}")
        
        result = chat.chat(session_id, message)
        
        print(f"   ü§ñ –û—Ç–≤–µ—Ç: {result['response']}")
        print(f"   ‚öôÔ∏è AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {result['ai_provider']}")
        print(f"   üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {'‚úÖ' if result['ai_provider'] == 'fallback' else '‚ùå'}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º API –∫–ª—é—á–∏
    chat.openai_api_key = original_openai
    chat.claude_api_key = original_claude
    
    print(f"\n‚úÖ Fallback —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

def test_conversation_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ—Ç–æ–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º"""
    
    print(f"\n\nüó£Ô∏è –¢–ï–°–¢ –ü–û–¢–û–ö–ê –†–ê–ó–ì–û–í–û–†–ê")
    print("=" * 40)
    
    chat = IntelligentChat() 
    session_id = chat.create_session("conversation_test")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä
    conversation = [
        ("–ü—Ä–∏–≤–µ—Ç! –Ø –Ω–æ–≤–∏—á–æ–∫ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏", "greeting"),
        ("–•–æ—á—É —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –≤–µ–±-—Å–∞–π—Ç", "project_start"),
        ("–ß—Ç–æ –ª—É—á—à–µ –∏–∑—É—á–∏—Ç—å —Å–Ω–∞—á–∞–ª–∞ - HTML –∏–ª–∏ CSS?", "advice"),
        ("–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã", "code_example"),
        ("–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∏–ª–∏ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ?", "improvement"),
        ("–°–¥–µ–ª–∞–π —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö", "enhance"),
    ]
    
    print("üé≠ –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –Ω–æ–≤–∏—á–∫–æ–º:")
    
    for step, (message, phase) in enumerate(conversation, 1):
        print(f"\n--- –®–∞–≥ {step} ({phase}) ---")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message}")
        
        result = chat.chat(session_id, message)
        
        print(f"ü§ñ AI: {result['response'][:120]}...")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        session = chat.get_session(session_id)
        print(f"üìä –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏: {len(session.messages)}")
        print(f"üéØ –¢–µ–∫—É—â–µ–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ: {result['intent_analysis']['intent']}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –º–µ–Ω—è—é—Ç—Å—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        if step % 2 == 0:  # –ö–∞–∂–¥—ã–π –≤—Ç–æ—Ä–æ–π —à–∞–≥ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            suggestions = chat.get_suggestions(session_id)
            print(f"üí° –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:")
            for suggestion in suggestions[:2]:
                print(f"   ‚Ä¢ {suggestion}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üéØ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø AI –ß–ê–¢–ê")
    print("=" * 60)
    
    try:
        # –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        test_basic_chat_functionality()
        
        # –ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π
        test_intent_analysis()
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏  
        test_session_management()
        
        # –†–µ–∑–µ—Ä–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        test_fallback_responses()
        
        # –ü–æ—Ç–æ–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        test_conversation_flow()
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print(f"\n\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print("=" * 50)
        print("‚úÖ –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: –†–ê–ë–û–¢–ê–ï–¢")
        print("‚úÖ –ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π: –†–ê–ë–û–¢–ê–ï–¢")
        print("‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏: –†–ê–ë–û–¢–ê–ï–¢") 
        print("‚úÖ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: –†–ê–ë–û–¢–ê–ï–¢")
        print("‚úÖ –ü–æ—Ç–æ–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: –†–ê–ë–û–¢–ê–ï–¢")
        print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: –†–ê–ë–û–¢–ê–ï–¢")
        
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print(f"ü§ñ AI —á–∞—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò: {e}")
        print("üîß –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –æ—Ç–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
        return False
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)